<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Amanda&#39;s Data Science Blog</title>
<link>https://amanda.rbind.io/index.html</link>
<atom:link href="https://amanda.rbind.io/index.xml" rel="self" type="application/rss+xml"/>
<description>Amanda&#39;s Data Science Blog</description>
<generator>quarto-1.3.353</generator>
<lastBuildDate>Mon, 12 Apr 2021 00:00:00 GMT</lastBuildDate>
<item>
  <title>Book Recommendations via Neural Collaborative Filtering</title>
  <dc:creator>Amanda Peterson</dc:creator>
  <link>https://amanda.rbind.io/posts/2021-04-03-book-recommendations-using-neural-collaborative-filtering/index.html</link>
  <description><![CDATA[ 




<p>Over the past 1.5 years I have enjoyed being part of a book club with ladies from my church. Sadly our book club ended as life has pulled us in separate directions. I plan to continue reading books, but what should I read? I decided to build a recommender system.</p>
<section id="the-technical-details" class="level1">
<h1>The technical details</h1>
<p>A recommender system utilizes user feedback history (either “explicit” feedback, such as star ratings, or “implicit” feedback, such as views, clicks, purchases, etc) to recommend items to users. Recommender systems have become ubiquitous in our society; examples include:</p>
<ul>
<li>Amazon recommends products to buy</li>
<li>Facebook recommends friends to connect with</li>
<li>YouTube recommends videos to watch</li>
</ul>
<p>In this experiment, I’ll be using a Neural Collaborative Filtering (NCF) model, a deep learning model proposed by He et. al.&nbsp;in their <a href="https://arxiv.org/pdf/1708.05031.pdf?source=post_page---------------------------">2017 paper</a>. The model is implemented by the authors using Keras and is available in <a href="https://github.com/hexiangnan/neural_collaborative_filtering">this GitHub repository</a>. For my own fun exercise, I implemented the model using <a href="https://keras.rstudio.com/">R Keras</a>. You can find it in my <a href="https://github.com/AmandaRP/NeuralCollaborativeFiltering">GitHub repository</a>.</p>
<p>The model is designed for binary feedback (that is, positive and negative user preferences). I’ll be using a mixture of explicit and implicit feedback, described in more detail in the Inferring Likes and Dislikes section of this post. The image below, from the <a href="https://arxiv.org/pdf/1708.05031.pdf">NCF paper</a>, shows the neural network model architecture.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://amanda.rbind.io/posts/2021-04-03-book-recommendations-using-neural-collaborative-filtering/images/NCFarchitecture.png" class="img-fluid figure-img" style="width:85.0%"></p>
</figure>
</div>
</section>
<section id="the-data" class="level1">
<h1>The Data</h1>
<p>To train the model I used a data set originally obtained from <a href="https://en.wikipedia.org/wiki/Goodreads">GoodReads.com</a>, a social book cataloging system. The data is available on the <a href="https://sites.google.com/eng.ucsd.edu/ucsdbookgraph">USCD Book Graph webiste</a>. Specifically, I’m using three files, each containing the following fields:</p>
<ul>
<li><strong>interactions</strong>: Contains <code>user_id</code>, <code>book_id</code>, <code>is_read</code>, <code>rating</code>, <code>is_reviewed</code></li>
<li><strong>book_info</strong>: Information about the books including title, isbn, author(s), and list of shelves.</li>
<li><strong>book_id_map</strong>: books ids used to join the other two data sets together</li>
</ul>
<p>Note that this data set is a bit outdated (only six books from 2019 and none from 2020 or later). It would be nice to obtain an updated data set.</p>
<section id="filtering-by-genre" class="level2">
<h2 class="anchored" data-anchor-id="filtering-by-genre">Filtering by genre</h2>
<p>The <code>shelves</code> field in the <code>book_info</code> data set is a list of virtual shelves that users have added books to. The shelf name is defined by the user and can be anything such as “to read”, “book club”, or the name of the genre. By looking at the list of shelves associated with a particular book, we can make some inferences about its genre. To limit books for my book club to Christian fiction (the focus of our group), I included books that were on at least one shelf with “christian” in the name and at least one shelf with “fiction” in the name (being careful to ignore “nonfiction” and “non-fiction”). This isn’t a perfect method for determining genre, but it significantly reduced the data size: 228,648,342 user-book interactions reduced to 5,628,062, a 98% reduction. If you’d like to try filtering the data by a different genre, use the <a href="https://github.com/AmandaRP/NeuralCollaborativeFiltering/blob/master/Data/genre_subset.R"><code>genre_subset.R</code></a> script.</p>
<center>
<p><img src="https://amanda.rbind.io/posts/2021-04-03-book-recommendations-using-neural-collaborative-filtering/images/thelionthewitchandthewardrobe.jpg" title="The Lion the Witch and the Wardrobe" class="img-fluid" style="width:18.0%"> <img src="https://amanda.rbind.io/posts/2021-04-03-book-recommendations-using-neural-collaborative-filtering/images/thepoisonwoodbible.jpg" title="The Poisonwood Bible" class="img-fluid" style="width:18.0%"> <img src="https://amanda.rbind.io/posts/2021-04-03-book-recommendations-using-neural-collaborative-filtering/images/thecroniclesofnarnia.jpg" title="The Chronicles of Narnia" class="img-fluid" style="width:18.0%"> <img src="https://amanda.rbind.io/posts/2021-04-03-book-recommendations-using-neural-collaborative-filtering/images/thefivepeopleyoumeetinheaven.jpg" title="The Five People You Meet in Heaven" class="img-fluid" style="width:18.0%"> <img src="https://amanda.rbind.io/posts/2021-04-03-book-recommendations-using-neural-collaborative-filtering/images/unbroken.jpg" title="Unbroken" class="img-fluid" style="width:18.0%"></p>
<p>The top five books appearing on the most shelves</p>
</center>
<p>The top book, <a href="https://www.goodreads.com/book/show/100915.The_Lion_the_Witch_and_the_Wardrobe?from_search=true&amp;from_srp=true&amp;rank=1">The Lion, the Witch and the Wardrobe</a>, is a well known classic fiction book and part of the series of books at #3, <a href="https://www.goodreads.com/book/show/101704">The Chronicles of Narnia</a>. It is one that I read as a young girl. I was not familiar with the books at #2 and #4: <a href="https://www.goodreads.com/book/show/17847199">The Poisonwood Bible</a> and <a href="https://www.goodreads.com/book/show/6980106">The Five People You Meet in Heaven</a>. Finally, the last on the list at #5 is <a href="https://www.goodreads.com/book/show/21864196">Unbroken: A World War II Story of Survival, Resilience, and Redemption</a>. This book is a true story and actually shouldn’t be included in the fiction genre. So, we see that this filtering method isn’t perfect. I’m OK with that.</p>
</section>
<section id="bookmark" class="level2">
<h2 class="anchored" data-anchor-id="bookmark">Inferring Likes and Dislikes</h2>
<p>For the NCF model, we need a list of books that each user liked and a list that they did not like. Some users provided explicit ratings (1 to 5 stars), however, not all users rate the books that they read. Additionally, it may be the case that some users just rate books that they like (or didn’t like). To obtain a sufficient amount of training data, I included both explicit and implicit feedback.</p>
<p>We’ll assume that a reader likes the book if:</p>
<ol type="1">
<li>They read the book AND (either gave it 4 or 5 stars OR didn’t provide rating). That is: <code>(is_read == 1 &amp; (0 == rating | rating &gt;= 4))</code>, OR</li>
<li>The book is on their shelf and not read yet. That is, <code>(is_read == 0)</code>.</li>
</ol>
<p>This is an optimistic viewpoint because we may include books on the reader’s shelf that they later read and decide that they do not like.</p>
<p>Alternatively, we’ll assume that a reader did <em>not</em> like a book if they read it and gave it a rating of 1 or 2. Books with a score of 3 were not used for model training.</p>
<p>Note that there exist cases where no rating was provided (value of <code>rating</code> is 0), but a text review exists. An enhancement for obtaining more positive and negative examples might be to mine the sentiment of reviews for these instances.</p>
<p>After performing these steps, I filtered out users who did not have at least 3 “positive” book examples (a threshold that could be tweaked). As a result we have a total of 264898 users and 25450 books.</p>
</section>
<section id="data-for-my-book-club" class="level2">
<h2 class="anchored" data-anchor-id="data-for-my-book-club">Data for my book club</h2>
<p>I added our club’s books to the data set. We have read dozens of books, but the following were those that we had a strong opinion about (either “good” and “bad”).</p>
<center>
<img src="https://amanda.rbind.io/posts/2021-04-03-book-recommendations-using-neural-collaborative-filtering/images/safelyhome.jpg" title="Safely Home" class="img-fluid" style="width:10.0%"> <img src="https://amanda.rbind.io/posts/2021-04-03-book-recommendations-using-neural-collaborative-filtering/images/longwaygone.jpg" title="Long Way Gone" class="img-fluid" style="width:10.0%"> <img src="https://amanda.rbind.io/posts/2021-04-03-book-recommendations-using-neural-collaborative-filtering/images/whencricketscry.jpg" title="When Crickets Cry" class="img-fluid" style="width:10.0%"> <img src="https://amanda.rbind.io/posts/2021-04-03-book-recommendations-using-neural-collaborative-filtering/images/redeeminglove.jpg" title="Redeeming Love" class="img-fluid" style="width:10.0%"> <img src="https://amanda.rbind.io/posts/2021-04-03-book-recommendations-using-neural-collaborative-filtering/images/Assureasdawn.jpg" title="As Sure as Dawn" class="img-fluid" style="width:10.0%"> <img src="https://amanda.rbind.io/posts/2021-04-03-book-recommendations-using-neural-collaborative-filtering/images/echointhedarkness.jpg" title="An Echo in the Darkness" class="img-fluid" style="width:10.0%"> <img src="https://amanda.rbind.io/posts/2021-04-03-book-recommendations-using-neural-collaborative-filtering/images/avoiceinthewind.jpg" title="A Voice in the Wind" class="img-fluid" style="width:10.0%"> <img src="https://amanda.rbind.io/posts/2021-04-03-book-recommendations-using-neural-collaborative-filtering/images/pearlinthesand.jpg" title="Pearl in the Sand" class="img-fluid" style="width:10.0%"> <img src="https://amanda.rbind.io/posts/2021-04-03-book-recommendations-using-neural-collaborative-filtering/images/sophiesheart.jpg" title="Sophie's Heart" class="img-fluid" style="width:10.0%"> Books that we liked
</center>
<center>
<p><img src="https://amanda.rbind.io/posts/2021-04-03-book-recommendations-using-neural-collaborative-filtering/images/athomeinmitford.jpg" title="At Home in Mitford" class="img-fluid" style="width:10.0%"> <img src="https://amanda.rbind.io/posts/2021-04-03-book-recommendations-using-neural-collaborative-filtering/images/thehideaway.jpg" title="The Hideaway" class="img-fluid" style="width:10.0%"> <img src="https://amanda.rbind.io/posts/2021-04-03-book-recommendations-using-neural-collaborative-filtering/images/thelacemaker.jpg" title="The Lacemaker" class="img-fluid" style="width:10.0%"> <img src="https://amanda.rbind.io/posts/2021-04-03-book-recommendations-using-neural-collaborative-filtering/images/theredtent.jpg" title="The Red Tent" class="img-fluid" style="width:10.0%"></p>
<p>Books that we did not like</p>
</center>
<p>As you can see, the number of “duds” was much smaller than the number of books that we liked. Francine Rivers was a popular author (I’ve only read one of her books, but hope to catch up soon). I would have also used the following books as positive training examples, but they were not in the data set: <a href="https://www.goodreads.com/book/show/35620754-the-kremlin-conspiracy?ac=1&amp;from_search=true&amp;qid=TOx79fls5W&amp;rank=1">The Kremlin Conspiracy</a> by Joel Rosenberg <!-- , [The 49th Mistic](https://www.goodreads.com/book/show/36548233-the-49th-mystic) by Ted Dekker,  --> and <a href="https://www.goodreads.com/book/show/40402597-my-heart-belongs-in-the-blue-ridge?from_search=true&amp;from_srp=true&amp;qid=GIbp9eeJTH&amp;rank=1">My Heart Belongs in Blue Ridge</a> by Pepper Basham.</p>
</section>
<section id="trainvalidationtest-split" class="level2">
<h2 class="anchored" data-anchor-id="trainvalidationtest-split">Train/Validation/Test Split</h2>
<p>I split the data into train, validation, and test sets following the method used in the NCF paper:</p>
<ul>
<li>Training: 4 negatives for every positive (for each user)</li>
<li>Validation: 1 positive (for each user)</li>
<li>Test: 1 positive, 100 negative (for each user)</li>
</ul>
<p>If a user did not have enough negatives for the 4-to-1 ratio of negatives to positives in the training set, then I sampled “implicit” negatives (i.e.&nbsp;those books that are not on the user’s shelf). The empirical popularity distribution of the books provided sampling probabilities, meaning that more popular books were more likely to be sampled. This is often a good idea for training recommender systems since users are likely already aware of the popular items. I sampled these training data points for each epoch of model training.</p>
<p>If the user had <em>more</em> negatives than the 4-to-1 ratio, then the extras were put in the test set. Subsequently, if the test set lacked the 100 negatives, then I sampled “implicit” negatives to fill out the test set (using the same strategy described for the training set). Sampling of the test set was done once prior to model training.</p>
</section>
</section>
<section id="results" class="level1">
<h1>Results</h1>
<p>The distribution of predictions for all books and users in the test set is shown below (separated by “good” and “bad” books).</p>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://amanda.rbind.io/posts/2021-04-03-book-recommendations-using-neural-collaborative-filtering/images/plt_preds.png" class="img-fluid figure-img" style="width:90.0%"></p>
</figure>
</div>
</div>
</div>
<p>I’m happy to see that the most of the “bad” books have low scores while the “good” books are more evenly spread out with a little bump on the high end. The goal is to score “good” higher than the “bad” (on a per-user basis).</p>
<p>The scores can be used to rank the books for each user. A couple of useful metrics for evaluating that ranking are:</p>
<ul>
<li>Hit rate (HR) at <em>k</em>: The percentage of users who’s “good” book appeared in their top <em>k</em> recommended books. (Recall the test set is composed of 100 “bad” and 1 “good” book for each user.) The range is [0, 1].</li>
<li>Normalized Discounted Cumulative Gain (NDGC) at 10: “Good” items appearing lower on the list are penalized (only considering the top <em>k</em> items). Normalization occurs by dividing the discounted cumulative gain by its “optimal” value. The metric is then averaged over all users. The range is [0, 1].</li>
</ul>
<p>The experiment result was 0.59 HR at 10 and 0.37 NDGC at 10 (evaluated on the test set).</p>
<p>As a sanity check I also computed the metrics for a recommender “model” based solely on popularity (i.e.&nbsp;everyone’s number one recommendation will be <a href="https://www.goodreads.com/book/show/100915.The_Lion_the_Witch_and_the_Wardrobe?from_search=true&amp;from_srp=true&amp;rank=1">The Lion, The Witch, and The Wardrobe</a> unless they already have it on their shelf). The resulting HR at 10 is 0.28 and the NDCG at 10 is 0.15. These metrics are significantly worse than those from the NCF model, so it paid to add the personalization.</p>
<section id="recommendations-for-my-book-club" class="level2">
<h2 class="anchored" data-anchor-id="recommendations-for-my-book-club">Recommendations for my book club</h2>
<p>To get a better sense of how this recommender did, let’s inspect the recommendations for my book club. The top 3 recommendations were all books by Francine Rivers (which makes sense since four of her books were on our short list of books that we liked). In fact, looking at the top 25 books on the recommended list, 76 percent were written by this author. It seems that having four of nine books by Francine as part of our “good” training set may be skewing the recommendations toward this author.</p>
<p>Coming in at #4, we find the first book by a different author: <a href="https://www.goodreads.com/book/show/359994.Gods_and_Kings">Gods and Kings</a> by Lynn Austin. This is an author that we have not read before. Interestingly, the book appears as a “Readers also enjoyed” suggestion on the GoodReads page of one of our “liked” books:</p>
<div class="cell" data-layout-align="center">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://amanda.rbind.io/posts/2021-04-03-book-recommendations-using-neural-collaborative-filtering/images/peoplealsoliked.png" class="img-fluid figure-img" style="width:95.0%"></p>
</figure>
</div>
</div>
</div>
<p>Looking at the worst scoring books for our group, we find books that we would likely <em>not</em> enjoy: <a href="https://www.goodreads.com/book/show/22085728-come-on-over#">Come On Over (CO2)</a> and <a href="https://www.goodreads.com/book/show/256272615-marry-now-sorry-later">Marry Me Now, Sorry Later</a> (rank 25,437 and 25,436 respectively). In fact, these books are not even in our preferred genre of Christian fiction. They were mistakenly included due to the author’s name: Christian Simamora.</p>
<p>Next, I decided to look at the rank of the top recommended book for each of the authors who wrote books that my group enjoyed. The result was (out of 25,437 total books):</p>
<ul>
<li>Francine Rivers (#1, <a href="https://www.goodreads.com/book/show/95602.Mark_of_the_Lion_Trilogy?from_search=true&amp;from_srp=true&amp;qid=aPoPk0tBes&amp;rank=1">Mark of the Lion Trilogy</a>)</li>
<li>Lori Wick (#30, <a href="https://www.goodreads.com/book/show/289745.Pretense?ac=1&amp;from_search=true&amp;qid=J93foRiGvl&amp;rank=1">Pretense</a>)</li>
<li>Charles Martin (#32, <a href="https://www.goodreads.com/book/show/241386.Wrapped_in_Rain?from_search=true&amp;from_srp=true&amp;qid=3zJt0wTUgi&amp;rank=1">Wrapped in Rain</a>)</li>
<li>Tessa Afshar (#38, <a href="https://www.goodreads.com/book/show/20702178-in-the-field-of-grace?from_search=true&amp;from_srp=true&amp;qid=ElbF3skUjQ&amp;rank=1">In the Field of Grace</a>)</li>
<li>Randy Alcorn (#425, <a href="https://www.goodreads.com/book/show/290363.Deadline?ac=1&amp;from_search=true&amp;qid=6dPXAtqezB&amp;rank=5">Deadline</a>)</li>
</ul>
<p>Interestingly, I had already ordered Tessa Afshar’s <a href="https://www.goodreads.com/book/show/20702178-in-the-field-of-grace?from_search=true&amp;from_srp=true&amp;qid=s7ibzAubn2&amp;rank=1">In the Field of Grace</a> before looking at these recommendations. So, that is right on point. Sadly, Randy Alcorn’s highest ranking book is at number 425 (his book, <a href="https://www.goodreads.com/book/show/290369.Safely_Home?ac=1&amp;from_search=true&amp;qid=k40Ui7fZo6&amp;rank=1">Safely Home</a>, was one of my favorites).</p>
<p>Overall, I’m fairly happy with these recommendations, even though the top of the list doesn’t demonstrate as much author variety as I’d like to see. The recommendations do feel tailored to my group’s reading interests.</p>
</section>
</section>
<section id="final-thoughts" class="level1">
<h1>Final thoughts</h1>
<p>There are a few areas of improvement that could be made:</p>
<ol type="1">
<li>Due to hardware limitations and slow model training, I didn’t perform hyper-parameter tuning. (I am using a GTX 970 GPU. Each training epoch takes a few hours.) Instead I used the defaults that were used in the NCF paper. A grid search of the hyperparamter space would likely be beneficial.</li>
<li>My group’s training data is small (nine books). Compare that to Goodreads.com, which requires users to rate 20 books before they will provide recommendations. A model that is better suited for cold start situations (users with little to no training data) may be beneficial. Such models incorporates side features (e.g.&nbsp;author, book description).</li>
<li>As mentioned earlier, the Goodreads data set that I used is a couple of years out of date. It would be great to retrain the model on newer data.</li>
<li>There are many other types of recommendation models to try, some of which claim to beat NCF. See <a href="https://github.com/hongleizhang/RSPapers">this list of must-read recommender papers</a>.</li>
</ol>
<p>In the meantime, I have a few books on my short list to read, but I’m still in search of more. I may try another recommender model. Or, let me know if you have a good suggestion! You can find me on Twitter <span class="citation" data-cites="DrAmandaRP">@DrAmandaRP</span>.</p>
<p>P.S. If you are new to deep learning in R, I recommend the <a href="https://www.manning.com/books/deep-learning-with-r">Deep Learning with R</a> book by François Chollet with J. J. Allaire.</p>


</section>

 ]]></description>
  <category>deep learning</category>
  <category>recommender systems</category>
  <guid>https://amanda.rbind.io/posts/2021-04-03-book-recommendations-using-neural-collaborative-filtering/index.html</guid>
  <pubDate>Mon, 12 Apr 2021 00:00:00 GMT</pubDate>
</item>
<item>
  <title>rstudio::global(2021) |&gt; summarize()</title>
  <dc:creator>Amanda Peterson</dc:creator>
  <link>https://amanda.rbind.io/posts/2021-01-21-rstudio-global/index.html</link>
  <description><![CDATA[ 




<p>Due to the COVID-19 pandemic, this year’s rstudio::conf was virtual (and free!). The conference is about all things R and RStudio. There were 15K+ registrants. Talks ran concurrently over a 12 hour period (and repeated again for viewers in other time zones). My notes below are only for a handful of selected talks– there are many others that I was not able to watch (yet). Videos are available on the <a href="https://resources.rstudio.com/resources/rstudioglobal-2021/" target="_blank">RStuduio website</a>.</p>
<section id="keynote-maintaining-the-house-that-tidyverse-built" class="level2">
<h2 class="anchored" data-anchor-id="keynote-maintaining-the-house-that-tidyverse-built">Keynote: Maintaining the house that tidyverse built</h2>
<p><strong>Speaker</strong>: Hadley Wickham (Chief Scientist at RStudio)</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://amanda.rbind.io/posts/2021-01-21-rstudio-global/images/hadley.png" class="img-fluid figure-img" style="width:100.0%"></p>
</figure>
</div>
<ul>
<li>Discussed the life cycle of functions and packages, which you will see tagged on many of RStudio’s packages. See <a href="https://www.tidyverse.org/lifecycle/" target="_blank">this page</a> and the <a href="https://cran.r-project.org/web/packages/lifecycle/index.html" target="_blank"><code>lifecycle</code></a> package for more details.</li>
<li>To maintain a static package installation for a project: Use <a href="https://rstudio.github.io/renv/" target="_blank"><code>renv</code></a> or <a href="https://packagemanager.rstudio.com/client/#/" target="_blank">RStudio’s public package manager</a>. On the latter, just pick a day in the past to maintain package state from that date (only for packages on CRAN).</li>
<li>If you haven’t already heard, <a href="https://dplyr.tidyverse.org/" target="_blank"><code>dplyr</code></a>’s spread &amp; gather functions are not going away. However, the recommended replacement functions are <code>pivot_longer</code> and <code>wider_wider</code>.</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://amanda.rbind.io/posts/2021-01-21-rstudio-global/images/gather.jpeg" class="img-fluid figure-img" style="width:85.0%"></p>
</figure>
</div>
<ul>
<li><a href="https://magrittr.tidyverse.org/" target="_blank"><code>magrittr</code></a> will be around for at least 4 or 5 years, but people will be encouraged to use the new pipe in base R version 4.1.</li>
<li><a href="https://modelr.tidyverse.org/" target="_blank"><code>modelr</code></a> is superseded by <a href="https://www.tidymodels.org/" target="_blank"><code>tidymodels</code></a>.</li>
</ul>
<p><br></p>
</section>
<section id="r-python-going-steady" class="level2">
<h2 class="anchored" data-anchor-id="r-python-going-steady">R &amp; Python: Going Steady</h2>
<p><strong>Speaker</strong>: Sean Lopp (Project Manager at RStudio)</p>
<ul>
<li>Myth: Data science teams need to choose between R and Python (or some other language).</li>
<li>Truth: Using the right tool for the right job can make data science teams more effective.</li>
<li><a href="https://rstudio.com/products/rstudio-server-pro/" target="_blank">RStudio Server Pro</a>: Provides a common architecture for many different types of data science tools (e.g.&nbsp;Jupyter notebooks, JupyterLab, RStudio). IT teams only need to set up one infrastructure instead of supporting many tools.</li>
<li><a href="https://rstudio.com/products/connect/" target="_blank">RStudio Connect</a>: Provides a common hosting architecture for many different types of data science products (e.g.&nbsp;reports, notebooks, APIs, shiny applications). Additionally, RStudio Connect increases collaboration between team members using different programming languages and tools.</li>
<li>My thoughts: I would ❤️ to have access to RStudio Connect.</li>
</ul>
<p><br></p>
</section>
<section id="art-lessons-one-year-as-rstudios-artist-in-residence" class="level2">
<h2 class="anchored" data-anchor-id="art-lessons-one-year-as-rstudios-artist-in-residence">Art Lessons: One Year as RStudio’s Artist-in-Residence</h2>
<p><strong>Speaker</strong>: Allison Horst (Professor at the Bren School of Environmental Science and Management at UC Santa Barbara)</p>
<p>Allison talked about the importance of art for making R instruction material more approachable for learners. Some of her new artwork was featured in this talk– I’m feeling motivated to add some of new artwork to some of my training materials. Allison’s artwork can be found in her <a href="https://github.com/allisonhorst/stats-illustrations" target="_blank">GitHub repo</a>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://amanda.rbind.io/posts/2021-01-21-rstudio-global/images/horst2.png" class="img-fluid figure-img" style="width:100.0%"></p>
</figure>
</div>
<p><br></p>
</section>
<section id="keynote-reporting-on-and-visualising-the-pandemic" class="level2">
<h2 class="anchored" data-anchor-id="keynote-reporting-on-and-visualising-the-pandemic">Keynote: Reporting on and visualising the pandemic</h2>
<p><strong>Speaker</strong>: John Burn-Murdoch (Financial Timesâ senior data visualization journalist, and creator of the FTâ’s coronavirus trajectory tracker charts)</p>
<p>John’s talk focused on data visualization for a mass audience. The data viz research paper that has been the most influential on his work: <a href="https://vcg.seas.harvard.edu/files/pfister/files/infovis_submission251-camera.pdf?m=1441898216" target="_blank">Beyond Memorability: Visualization Recognition and Recall</a>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://amanda.rbind.io/posts/2021-01-21-rstudio-global/images/keynote2.png" class="img-fluid figure-img" style="width:100.0%"></p>
</figure>
</div>
<p>Lessons:</p>
<ul>
<li>Text and other annotations are critical when sharing charts to the masses. The annotations make the chart accessible.</li>
<li>It’s the responsibility of the chart designer to make sure the reader is not confused when looking at the chart.</li>
<li>Info viz is personal and often political. People will bring their prior beliefs to the plot and make judgments about the utility of the chart (for example many strong opinions about the use of log scale on the vertical axis).</li>
<li>Don’t publish and vanish. Incorporate readers’ feedback.</li>
<li>Ease of understanding is top priority (more than accuracy). For example, using a 7 day rolling average may be easier for people to understand than splines (even though the latter shows more accurate numbers).</li>
<li>Animation can be incredibly effective (but use it sparingly).</li>
</ul>
<p><br></p>
</section>
<section id="whats-new-in-tidymodels" class="level2">
<h2 class="anchored" data-anchor-id="whats-new-in-tidymodels">What’s new in <code>tidymodels</code>?</h2>
<p><strong>Speaker</strong>: Max Kuhn (Software engineer at RStudio)</p>
<p>Recent updates in <code>tidymodels</code>:</p>
<ul>
<li>Added limited support for sparse matrices.</li>
<li><a href="https://cran.r-project.org/web/packages/finetune/index.html" target="_blank"><code>finetune</code></a> package (extension of <a href="https://tune.tidymodels.org/" target="_blank"><code>tune</code></a> package) for finding optimal tuning hyper-parameters. Nice methods available in <code>finetune</code> finding optimal hyper-parameters (methods are more efficient that full grid search):
<ul>
<li>Racing methods</li>
<li>Simulated Annealing search</li>
</ul></li>
</ul>
<p>How do you pick a modeling framework (e.g.&nbsp;<code>mlr3</code>, <code>h2o</code>, <code>tidymodels</code>)?</p>
<ul>
<li><code>h2o</code> for speed (sub-second latency).</li>
<li>If your framework is tidyverse, you might go with <code>tidymodels</code>.</li>
<li><code>mlr3</code> is great, too 😃</li>
</ul>
<p>See the book: <a href="https://www.tmwr.org/" target="_blank">Tidy modeling with R</a>. Slides for talk available <a href="https://github.com/rstudio/rstudio-conf/tree/master/2021/maxkuhn" target="_blank">here</a>.</p>
<p><br></p>
</section>
<section id="feedback-at-scale" class="level2">
<h2 class="anchored" data-anchor-id="feedback-at-scale">Feedback at scale</h2>
<p><strong>Speaker</strong>: Mine Çetinkaya-Rundel (Educator and Data Scientist at RStudio, Senior Lecturer in the School of Mathematics at University of Edinburgh)</p>
<p>Building tutorials using <a href="https://rstudio.github.io/learnr/" target="_blank"><code>learnr</code></a>:</p>
<ul>
<li>Really shines with coding exercises. Provides instant feedback to students.</li>
<li>Recommendations: Include starter code for students to complete. Give “human friendly” feedback in response to incorrect responses. Check the result instead of checking the code (since students can order operations in multiple ways).</li>
</ul>
<p><a href="https://github.com/rundel/learnrhash/" target="_blank"><code>learnrhash</code></a>: Use with <code>learnr</code> to collect (hashed) answer submissions from student <code>learnr</code> sessions.</p>
<p>Options for distributing at scale:</p>
<ul>
<li>shinyapps.io or RStudio connect, or<br>
</li>
<li>distribute within a package</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://amanda.rbind.io/posts/2021-01-21-rstudio-global/images/mine.png" class="img-fluid figure-img" style="width:100.0%"></p>
</figure>
</div>
<p><br></p>
</section>
<section id="always-look-on-the-bright-side-of-plots" class="level2">
<h2 class="anchored" data-anchor-id="always-look-on-the-bright-side-of-plots">Always look on the bright side of plots</h2>
<p><strong>Speaker</strong>: Kara Woo (Research scientist in data curation at Sage Bionetworks)</p>
<p>Discussion points: Mapping mishaps, scale snafus (setting scale limits removes data before statistical summaries. To zoom in on a plot, better to set coordinate limits), and theme threats. Kara talked about common mistakes that people make when using <a href="https://ggplot2.tidyverse.org/" target="_blank"><code>ggplot2</code></a>.</p>
<p>Follow <a href="https://twitter.com/accidental__aRt" target="_blank">accidental aRt</a> on Twitter.</p>


</section>

 ]]></description>
  <category>rstats</category>
  <category>conference</category>
  <guid>https://amanda.rbind.io/posts/2021-01-21-rstudio-global/index.html</guid>
  <pubDate>Thu, 21 Jan 2021 00:00:00 GMT</pubDate>
  <media:content url="https://amanda.rbind.io/posts/2021-01-21-rstudio-global/rstudio_2021.png" medium="image" type="image/png" height="73" width="144"/>
</item>
<item>
  <title>Mirror, mirror on the wall, does my test data reflect my training data at all?</title>
  <dc:creator>Amanda Peterson</dc:creator>
  <link>https://amanda.rbind.io/posts/2020-11-08-mirror-mirror-on-the-wall-does-my-test-data-reflect-my-training-data-at-all/index.html</link>
  <description><![CDATA[ 




<p>In the paper <a href="https://arxiv.org/pdf/1907.06902.pdf" target="_blank">Are We Really Making Much Progress? A Worrying Analysis of Recent Neural Recommendation Approaches</a>, authors Dacrema, Cremonesi, and Jannach evaluate various neural networks which were designed for recommendation systems and proposed in prominent machine learning journals. A recommendation system is an information filtering system which uses user history (e.g.&nbsp;purchases, page views, clicks, thumbs up/down, etc) to provide personalized item recommendations to users.</p>
<p>The authors point out a few mistakes or “questionable techniques” used in the research they were attempting to reproduce and evaluate. The figure in the article snippet below points out that, for a particular model they were evaluating, the popularity distribution of items assigned to the test and train data splits did not seem to be the same. <em>Interestingly, this affected the reported results and potentially the claim that the proposed model was a state-of-the-art!</em> See the article for more details.</p>
<hr>
<p><img src="https://amanda.rbind.io/posts/2020-11-08-mirror-mirror-on-the-wall-does-my-test-data-reflect-my-training-data-at-all/images/para1.png" class="img-fluid" style="width:48.0%" data-fig-align="center"> <img src="https://amanda.rbind.io/posts/2020-11-08-mirror-mirror-on-the-wall-does-my-test-data-reflect-my-training-data-at-all/images/para2.png" class="img-fluid" style="width:48.0%" data-fig-align="center"></p>
<p>Snippet of the 2020 paper, “Are We Really Making Much Progress? A Worrying Analysis of Recent Neural Recommendation Approaches”, by Dacrema, Cremonesi, and Jannach</p>
<hr>
<p>I thought this was a nice example comparing the distribution of two samples (i.e.&nbsp;comparing the item popularity of the test set versus the training set). Why is this important? Well, because we would like to train our model using data similar to data that the model will score in the future. The test set is used to tell us how good (or bad) our model performs on data that it has not seen before.</p>
<p>The authors mentioned that they used the Gini index to evaluate the distribution of the test set. One might also wonder if a hypothesis test could be used to consider the evidence for or against the training and test sets having the same underlying distribution. Let’s look at both approaches.</p>
<section id="the-data" class="level2">
<h2 class="anchored" data-anchor-id="the-data">The data</h2>
<p>The train and test data mentioned in the article above are available at <a href="https://github.com/lzheng21/SpectralCF/tree/master/data/ml-1m" target="_blank">github.com/lzheng21/SpectralCF</a>. For convenience I also saved them as R dataframes in the <a href="https://github.com/AmandaRP/AmandaRP.github.io/tree/master/content/post/2020-11-08-mirror-mirror-on-the-wall-does-my-test-data-reflect-my-training-data-at-all/data" target="_blank">data directory</a> of the GitHub repo associated with this analysis. Using R, the data can be loaded as follows.</p>
<div class="cell" data-code-copy="true">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r fold-show code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">load</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data/train_test.RData"</span>)</span></code></pre></div>
</div>
<p>Let’s take a peek at the training set. The data is composed of two columns containing user ids and item ids. It comes from <a href="https://grouplens.org/datasets/movielens/" target="_blank">MovieLens</a>, which provides data about movie watching history. The existence of a user-item pair in the data means that the user interacted with the item (in this case the user watched the movie). A data scientist can use this information as “implicit feedback”, inferring that the user “liked” the item.</p>
<div class="cell">
<div class="cell-output-display">

<div id="kdqcobxicm" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>html {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
}

:where(#kdqcobxicm) .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

:where(#kdqcobxicm) .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

:where(#kdqcobxicm) .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

:where(#kdqcobxicm) .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

:where(#kdqcobxicm) .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

:where(#kdqcobxicm) .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

:where(#kdqcobxicm) .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

:where(#kdqcobxicm) .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

:where(#kdqcobxicm) .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

:where(#kdqcobxicm) .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

:where(#kdqcobxicm) .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

:where(#kdqcobxicm) .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

:where(#kdqcobxicm) .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

:where(#kdqcobxicm) .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

:where(#kdqcobxicm) .gt_from_md > :first-child {
  margin-top: 0;
}

:where(#kdqcobxicm) .gt_from_md > :last-child {
  margin-bottom: 0;
}

:where(#kdqcobxicm) .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

:where(#kdqcobxicm) .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#kdqcobxicm) .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

:where(#kdqcobxicm) .gt_row_group_first td {
  border-top-width: 2px;
}

:where(#kdqcobxicm) .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#kdqcobxicm) .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

:where(#kdqcobxicm) .gt_first_summary_row.thick {
  border-top-width: 2px;
}

:where(#kdqcobxicm) .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

:where(#kdqcobxicm) .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#kdqcobxicm) .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

:where(#kdqcobxicm) .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

:where(#kdqcobxicm) .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

:where(#kdqcobxicm) .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

:where(#kdqcobxicm) .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-left: 4px;
  padding-right: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#kdqcobxicm) .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

:where(#kdqcobxicm) .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#kdqcobxicm) .gt_left {
  text-align: left;
}

:where(#kdqcobxicm) .gt_center {
  text-align: center;
}

:where(#kdqcobxicm) .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

:where(#kdqcobxicm) .gt_font_normal {
  font-weight: normal;
}

:where(#kdqcobxicm) .gt_font_bold {
  font-weight: bold;
}

:where(#kdqcobxicm) .gt_font_italic {
  font-style: italic;
}

:where(#kdqcobxicm) .gt_super {
  font-size: 65%;
}

:where(#kdqcobxicm) .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 75%;
  vertical-align: 0.4em;
}

:where(#kdqcobxicm) .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

:where(#kdqcobxicm) .gt_indent_1 {
  text-indent: 5px;
}

:where(#kdqcobxicm) .gt_indent_2 {
  text-indent: 10px;
}

:where(#kdqcobxicm) .gt_indent_3 {
  text-indent: 15px;
}

:where(#kdqcobxicm) .gt_indent_4 {
  text-indent: 20px;
}

:where(#kdqcobxicm) .gt_indent_5 {
  text-indent: 25px;
}
</style>
<table class="gt_table">
  <thead class="gt_header">
    <tr>
      <td colspan="2" class="gt_heading gt_title gt_font_normal gt_bottom_border" style="">Sample of Training Data</td>
    </tr>
    
  </thead>
  <thead class="gt_col_headings">
    <tr>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="user">user</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="item">item</th>
    </tr>
  </thead>
  <tbody class="gt_table_body">
    <tr><td headers="user" class="gt_row gt_right">1062</td>
<td headers="item" class="gt_row gt_right">538</td></tr>
    <tr><td headers="user" class="gt_row gt_right">589</td>
<td headers="item" class="gt_row gt_right">661</td></tr>
    <tr><td headers="user" class="gt_row gt_right">729</td>
<td headers="item" class="gt_row gt_right">127</td></tr>
    <tr><td headers="user" class="gt_row gt_right">2264</td>
<td headers="item" class="gt_row gt_right">78</td></tr>
    <tr><td headers="user" class="gt_row gt_right">1013</td>
<td headers="item" class="gt_row gt_right">2521</td></tr>
  </tbody>
  
  
</table>
</div>
</div>
</div>
<div class="cell">
<div class="cell-output-display">

<div id="mqolonedqg" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>html {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
}

:where(#mqolonedqg) .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

:where(#mqolonedqg) .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

:where(#mqolonedqg) .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

:where(#mqolonedqg) .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

:where(#mqolonedqg) .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

:where(#mqolonedqg) .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

:where(#mqolonedqg) .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

:where(#mqolonedqg) .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

:where(#mqolonedqg) .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

:where(#mqolonedqg) .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

:where(#mqolonedqg) .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

:where(#mqolonedqg) .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

:where(#mqolonedqg) .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

:where(#mqolonedqg) .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

:where(#mqolonedqg) .gt_from_md > :first-child {
  margin-top: 0;
}

:where(#mqolonedqg) .gt_from_md > :last-child {
  margin-bottom: 0;
}

:where(#mqolonedqg) .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

:where(#mqolonedqg) .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#mqolonedqg) .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

:where(#mqolonedqg) .gt_row_group_first td {
  border-top-width: 2px;
}

:where(#mqolonedqg) .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#mqolonedqg) .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

:where(#mqolonedqg) .gt_first_summary_row.thick {
  border-top-width: 2px;
}

:where(#mqolonedqg) .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

:where(#mqolonedqg) .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#mqolonedqg) .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

:where(#mqolonedqg) .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

:where(#mqolonedqg) .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

:where(#mqolonedqg) .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

:where(#mqolonedqg) .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-left: 4px;
  padding-right: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#mqolonedqg) .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

:where(#mqolonedqg) .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

:where(#mqolonedqg) .gt_left {
  text-align: left;
}

:where(#mqolonedqg) .gt_center {
  text-align: center;
}

:where(#mqolonedqg) .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

:where(#mqolonedqg) .gt_font_normal {
  font-weight: normal;
}

:where(#mqolonedqg) .gt_font_bold {
  font-weight: bold;
}

:where(#mqolonedqg) .gt_font_italic {
  font-style: italic;
}

:where(#mqolonedqg) .gt_super {
  font-size: 65%;
}

:where(#mqolonedqg) .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 75%;
  vertical-align: 0.4em;
}

:where(#mqolonedqg) .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

:where(#mqolonedqg) .gt_indent_1 {
  text-indent: 5px;
}

:where(#mqolonedqg) .gt_indent_2 {
  text-indent: 10px;
}

:where(#mqolonedqg) .gt_indent_3 {
  text-indent: 15px;
}

:where(#mqolonedqg) .gt_indent_4 {
  text-indent: 20px;
}

:where(#mqolonedqg) .gt_indent_5 {
  text-indent: 25px;
}
</style>
<table class="gt_table">
  <thead class="gt_header">
    <tr>
      <td colspan="6" class="gt_heading gt_title gt_font_normal gt_bottom_border" style="">Summary of Training Data</td>
    </tr>
    
  </thead>
  <thead class="gt_col_headings">
    <tr>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="Min User ID">Min User ID</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="Max User ID">Max User ID</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="User Count">User Count</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="Min Item ID">Min Item ID</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="Max Item ID">Max Item ID</th>
      <th class="gt_col_heading gt_columns_bottom_border gt_right" rowspan="1" colspan="1" scope="col" id="Item Count">Item Count</th>
    </tr>
  </thead>
  <tbody class="gt_table_body">
    <tr><td headers="min_user" class="gt_row gt_right">0</td>
<td headers="max_user" class="gt_row gt_right">6013</td>
<td headers="num_users" class="gt_row gt_right">6014</td>
<td headers="min_item" class="gt_row gt_right">0</td>
<td headers="max_item" class="gt_row gt_right">3704</td>
<td headers="num_items" class="gt_row gt_right">3068</td></tr>
  </tbody>
  
  
</table>
</div>
</div>
</div>
<p>Next, count the number of user interactions per item in each of the train and test datasets. Only the first 6 rows of the result are shown in the table below.</p>
<div class="cell" data-code-copy="true">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r fold-show code-with-copy"><code class="sourceCode r"><span id="cb2-1">item_frequency <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb2-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">full_join</span>(</span>
<span id="cb2-3">    train <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(item) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">count</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>(),</span>
<span id="cb2-4">    test  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(item) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">count</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>(),</span>
<span id="cb2-5">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"item"</span></span>
<span id="cb2-6">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">count_train =</span> n.x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">count_test =</span> n.y) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">replace_na</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">count_train =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">count_test =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">

<div id="zcowyuiqea" style="padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;">
<style>html {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;
}

#zcowyuiqea .gt_table {
  display: table;
  border-collapse: collapse;
  margin-left: auto;
  margin-right: auto;
  color: #333333;
  font-size: 16px;
  font-weight: normal;
  font-style: normal;
  background-color: #FFFFFF;
  width: auto;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #A8A8A8;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #A8A8A8;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
}

#zcowyuiqea .gt_heading {
  background-color: #FFFFFF;
  text-align: center;
  border-bottom-color: #FFFFFF;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#zcowyuiqea .gt_caption {
  padding-top: 4px;
  padding-bottom: 4px;
}

#zcowyuiqea .gt_title {
  color: #333333;
  font-size: 125%;
  font-weight: initial;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-color: #FFFFFF;
  border-bottom-width: 0;
}

#zcowyuiqea .gt_subtitle {
  color: #333333;
  font-size: 85%;
  font-weight: initial;
  padding-top: 0;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-color: #FFFFFF;
  border-top-width: 0;
}

#zcowyuiqea .gt_bottom_border {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#zcowyuiqea .gt_col_headings {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
}

#zcowyuiqea .gt_col_heading {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 6px;
  padding-left: 5px;
  padding-right: 5px;
  overflow-x: hidden;
}

#zcowyuiqea .gt_column_spanner_outer {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: normal;
  text-transform: inherit;
  padding-top: 0;
  padding-bottom: 0;
  padding-left: 4px;
  padding-right: 4px;
}

#zcowyuiqea .gt_column_spanner_outer:first-child {
  padding-left: 0;
}

#zcowyuiqea .gt_column_spanner_outer:last-child {
  padding-right: 0;
}

#zcowyuiqea .gt_column_spanner {
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: bottom;
  padding-top: 5px;
  padding-bottom: 5px;
  overflow-x: hidden;
  display: inline-block;
  width: 100%;
}

#zcowyuiqea .gt_group_heading {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  text-align: left;
}

#zcowyuiqea .gt_empty_group_heading {
  padding: 0.5px;
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  vertical-align: middle;
}

#zcowyuiqea .gt_from_md > :first-child {
  margin-top: 0;
}

#zcowyuiqea .gt_from_md > :last-child {
  margin-bottom: 0;
}

#zcowyuiqea .gt_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  margin: 10px;
  border-top-style: solid;
  border-top-width: 1px;
  border-top-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 1px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 1px;
  border-right-color: #D3D3D3;
  vertical-align: middle;
  overflow-x: hidden;
}

#zcowyuiqea .gt_stub {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
}

#zcowyuiqea .gt_stub_row_group {
  color: #333333;
  background-color: #FFFFFF;
  font-size: 100%;
  font-weight: initial;
  text-transform: inherit;
  border-right-style: solid;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
  padding-left: 5px;
  padding-right: 5px;
  vertical-align: top;
}

#zcowyuiqea .gt_row_group_first td {
  border-top-width: 2px;
}

#zcowyuiqea .gt_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#zcowyuiqea .gt_first_summary_row {
  border-top-style: solid;
  border-top-color: #D3D3D3;
}

#zcowyuiqea .gt_first_summary_row.thick {
  border-top-width: 2px;
}

#zcowyuiqea .gt_last_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#zcowyuiqea .gt_grand_summary_row {
  color: #333333;
  background-color: #FFFFFF;
  text-transform: inherit;
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
}

#zcowyuiqea .gt_first_grand_summary_row {
  padding-top: 8px;
  padding-bottom: 8px;
  padding-left: 5px;
  padding-right: 5px;
  border-top-style: double;
  border-top-width: 6px;
  border-top-color: #D3D3D3;
}

#zcowyuiqea .gt_striped {
  background-color: rgba(128, 128, 128, 0.05);
}

#zcowyuiqea .gt_table_body {
  border-top-style: solid;
  border-top-width: 2px;
  border-top-color: #D3D3D3;
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
}

#zcowyuiqea .gt_footnotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#zcowyuiqea .gt_footnote {
  margin: 0px;
  font-size: 90%;
  padding-left: 4px;
  padding-right: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#zcowyuiqea .gt_sourcenotes {
  color: #333333;
  background-color: #FFFFFF;
  border-bottom-style: none;
  border-bottom-width: 2px;
  border-bottom-color: #D3D3D3;
  border-left-style: none;
  border-left-width: 2px;
  border-left-color: #D3D3D3;
  border-right-style: none;
  border-right-width: 2px;
  border-right-color: #D3D3D3;
}

#zcowyuiqea .gt_sourcenote {
  font-size: 90%;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-left: 5px;
  padding-right: 5px;
}

#zcowyuiqea .gt_left {
  text-align: left;
}

#zcowyuiqea .gt_center {
  text-align: center;
}

#zcowyuiqea .gt_right {
  text-align: right;
  font-variant-numeric: tabular-nums;
}

#zcowyuiqea .gt_font_normal {
  font-weight: normal;
}

#zcowyuiqea .gt_font_bold {
  font-weight: bold;
}

#zcowyuiqea .gt_font_italic {
  font-style: italic;
}

#zcowyuiqea .gt_super {
  font-size: 65%;
}

#zcowyuiqea .gt_footnote_marks {
  font-style: italic;
  font-weight: normal;
  font-size: 75%;
  vertical-align: 0.4em;
}

#zcowyuiqea .gt_asterisk {
  font-size: 100%;
  vertical-align: 0;
}

#zcowyuiqea .gt_indent_1 {
  text-indent: 5px;
}

#zcowyuiqea .gt_indent_2 {
  text-indent: 10px;
}

#zcowyuiqea .gt_indent_3 {
  text-indent: 15px;
}

#zcowyuiqea .gt_indent_4 {
  text-indent: 20px;
}

#zcowyuiqea .gt_indent_5 {
  text-indent: 25px;
}
</style>

<table class="gt_table table table-sm table-striped small" data-quarto-postprocess="true">
<thead class="gt_col_headings">
<tr class="header">
<th id="item" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">item</th>
<th id="Train Count" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">Train Count</th>
<th id="Test Count" class="gt_col_heading gt_columns_bottom_border gt_right" data-quarto-table-cell-role="th" scope="col">Test Count</th>
</tr>
</thead>
<tbody class="gt_table_body">
<tr class="odd">
<td class="gt_row gt_right" headers="item">0</td>
<td class="gt_row gt_right" headers="count_train">932</td>
<td class="gt_row gt_right" headers="count_test">5</td>
</tr>
<tr class="even">
<td class="gt_row gt_right" headers="item">1</td>
<td class="gt_row gt_right" headers="count_train">77</td>
<td class="gt_row gt_right" headers="count_test">0</td>
</tr>
<tr class="odd">
<td class="gt_row gt_right" headers="item">2</td>
<td class="gt_row gt_right" headers="count_train">259</td>
<td class="gt_row gt_right" headers="count_test">1</td>
</tr>
<tr class="even">
<td class="gt_row gt_right" headers="item">3</td>
<td class="gt_row gt_right" headers="count_train">308</td>
<td class="gt_row gt_right" headers="count_test">2</td>
</tr>
<tr class="odd">
<td class="gt_row gt_right" headers="item">4</td>
<td class="gt_row gt_right" headers="count_train">309</td>
<td class="gt_row gt_right" headers="count_test">85</td>
</tr>
<tr class="even">
<td class="gt_row gt_right" headers="item">5</td>
<td class="gt_row gt_right" headers="count_train">1186</td>
<td class="gt_row gt_right" headers="count_test">0</td>
</tr>
</tbody>
</table>

</div>
</div>
</div>
<p>We can use this information to re-create the plot from the paper:</p>
<div class="cell" data-layout-align="center" data-code-copy="true">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">item_frequency <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">train =</span> count_train<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(count_train), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">test =</span> count_test<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(count_test)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span>(count_train)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">train_rank =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row_number</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>count_train, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>count_test) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(item, train_rank), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"num_interactions"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(train_rank, num_interactions, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> data, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> data)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xlab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Item Index"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb3-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Normalized number of interactions"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://amanda.rbind.io/posts/2020-11-08-mirror-mirror-on-the-wall-does-my-test-data-reflect-my-training-data-at-all/index_files/figure-html/unnamed-chunk-8-1.png" class="img-fluid figure-img" width="672"></p>
<figcaption class="figure-caption">Figure 1: Comparison of the provided test and train data</figcaption>
</figure>
</div>
</div>
</div>
<p>I think that looks pretty close to the image in the article! As the authors point out, the items are sorted by their popularity in the training set (in descending order along the horizontal axis). The value of the (normalized) test popularity is also plotted for each item. We can see that the two distributions do not look similar. To be a bit more rigorous we can consider a few statistical procedures.</p>
</section>
<section id="gini-index" class="level2">
<h2 class="anchored" data-anchor-id="gini-index">Gini Index</h2>
<p>The article authors used the Gini index to evaluate the distribution of the provided test set. Let’s try it to see how it works. We’ll use the <a href="https://CRAN.R-project.org/package=ineq" target="_blank"><code>ineq</code></a> R package.</p>
<div class="cell" data-code-copy="true">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r fold-show code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#install.packages("ineq")</span></span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ineq)</span></code></pre></div>
</div>
<p>The Gini index is a measure of inequality ranging from 0 (equality) to 1 (no equality). For example, if there were no popularity bias in the dataset (i.e.&nbsp;all items had the same number of interactions), then the Gini index would be 0. That’s not the case since some movies were watched more than others. Let’s look at the Gini index for the provided train and test sets.</p>
<div class="cell" data-code-copy="true">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r fold-show code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Gini index for provided test set</span></span>
<span id="cb5-2">gini_provided_test <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb5-3">  item_frequency <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>item, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>count_train) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ineq</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gini"</span>)</span>
<span id="cb5-7"></span>
<span id="cb5-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Gini index for provided train set</span></span>
<span id="cb5-9">gini_provided_train <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb5-10">  item_frequency <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb5-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>item, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>count_test) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb5-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ineq</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gini"</span>)</span>
<span id="cb5-14"></span>
<span id="cb5-15">gini_provided_train</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.7636983</code></pre>
</div>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r fold-show code-with-copy"><code class="sourceCode r"><span id="cb7-1">gini_provided_test</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.9044503</code></pre>
</div>
</div>
<p>The provided test set has a much higher Gini index than the train dataset (0.9 compared to 0.76). Is such a difference expected for a random train/test split? Keep reading.</p>
</section>
<section id="resampling-the-test-data" class="level2">
<h2 class="anchored" data-anchor-id="resampling-the-test-data">Resampling the test data</h2>
<p>Let’s try sampling our own test set to see how that affects the Gini index. We’ll start with the full dataset, sampling user-item interactions at the same rate as the provided train/test split and stratifying by user.</p>
<div class="cell" data-code-copy="true">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r fold-show code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Determine percentage of data that should be sampled for test</span></span>
<span id="cb9-2">(pct_test <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(test)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(test) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(train)))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.2081349</code></pre>
</div>
</div>
<div class="cell" data-code-copy="true">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r fold-show code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sample test set (stratify by user)</span></span>
<span id="cb11-2">data_full <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>(train,test)</span>
<span id="cb11-3">test_new <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb11-4">  data_full <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb11-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(user) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice_sample</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prop =</span> pct_test) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>()</span>
<span id="cb11-8"></span>
<span id="cb11-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Put remaining data in train:</span></span>
<span id="cb11-10">train_new <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">anti_join</span>(data_full, test_new)</span>
<span id="cb11-11"></span>
<span id="cb11-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Recreate our interaction counts for each item:</span></span>
<span id="cb11-13">item_frequency_new <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb11-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">full_join</span>(</span>
<span id="cb11-15">    train_new <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(item) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">count</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>(),</span>
<span id="cb11-16">    test_new  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(item) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">count</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>(),</span>
<span id="cb11-17">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"item"</span></span>
<span id="cb11-18">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rename</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">count_train =</span> n.x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">count_test =</span> n.y) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">replace_na</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">count_train =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">count_test =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span></code></pre></div>
</div>
<p>Let’s visualize the newly sampled train and test data, which we can compare to Figure 1.</p>
<div class="cell" data-layout-align="center" data-code-copy="true">
<details>
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">item_frequency_new <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">train =</span> count_train<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(count_train), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">test =</span> count_test<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(count_test)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">desc</span>(count_train)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">train_rank =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row_number</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>count_train, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>count_test) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pivot_longer</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(item, train_rank), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values_to =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"num_interactions"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(train_rank, num_interactions, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> data, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> data)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xlab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Items"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb12-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Normalized number of interactions"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://amanda.rbind.io/posts/2020-11-08-mirror-mirror-on-the-wall-does-my-test-data-reflect-my-training-data-at-all/index_files/figure-html/unnamed-chunk-13-1.png" class="img-fluid figure-img" width="672"></p>
<figcaption class="figure-caption">Figure 2: Comparison of our sampled test and train data</figcaption>
</figure>
</div>
</div>
</div>
<p>The test and train popularity distributions look much closer!</p>
</section>
<section id="gini-index-revisited" class="level2">
<h2 class="anchored" data-anchor-id="gini-index-revisited">Gini Index Revisited</h2>
<p>Now we can revisit the Gini index for the re-sampled train/test split.</p>
<div class="cell" data-code-copy="true">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r fold-show code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Gini index for our sampled test set:</span></span>
<span id="cb13-2">gini_ours_test <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb13-3">  item_frequency_new <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb13-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>item, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>count_train) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb13-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ineq</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gini"</span>)</span>
<span id="cb13-7">gini_ours_test</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.7549052</code></pre>
</div>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r fold-show code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Gini index for our sampled train set:</span></span>
<span id="cb15-2">gini_ours_train <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb15-3">  item_frequency_new <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb15-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>item, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>count_test) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ineq</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gini"</span>)</span>
<span id="cb15-7"></span>
<span id="cb15-8">gini_ours_train</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.7510046</code></pre>
</div>
</div>
<p>We see that our sampled test set has a Gini index (0.75) that is much closer to that of our sampled training dataset (0.75).</p>
<p>But, how much difference can we expect between the two sampled datasets that are representative of the same distribution? Is the observed difference in the provided datasets likely due to random sampling or some other reason? Let’s take a look at a couple of hypothesis tests.</p>
</section>
<section id="hypothesis-testing" class="level2">
<h2 class="anchored" data-anchor-id="hypothesis-testing">Hypothesis Testing</h2>
<section id="chi2-test-of-homogeneity" class="level3">
<h3 class="anchored" data-anchor-id="chi2-test-of-homogeneity"><img src="https://latex.codecogs.com/png.latex?%5Cchi%5E2"> Test of Homogeneity</h3>
<!-- ### $\chi^2$ Goodness of Fit Test -->
<p>Let’s suppose that our null hypothesis is that the train and test sets have the <em>same</em> underlying distribution (vs the alternative hypothesis that they do not). We can consider the data as a 2 by 3232 contingency table (since there are 3232 items). One might naively choose to run a <img src="https://latex.codecogs.com/png.latex?%5Cchi%5E2"> test to test this hypothesis.</p>

<!-- Let's suppose that our null hypothesis is that the test set is representative of the full dataset (vs the alternative hypothesis that it is not). We can consider the data as a 2 by 3232 contingency table (since there are 3232 items). -->
<!-- One might naively choose to run a $\chi^2$ test to test this hypothesis.  -->
<p>The <img src="https://latex.codecogs.com/png.latex?%5Cchi%5E2"> test is most appropriate when the data is not too sparse. Recall that one of the rule-of-thumb assumptions for the <img src="https://latex.codecogs.com/png.latex?%5Cchi%5E2"> test is that no more than 20% of the expected cells counts are less than 5. <!-- (Sometimes a slightly different rule of thumb is used: that *all* cell counts have an expected value of *at least* 5.)  --><br>
Let’s check to see if this assumption is satisfied.</p>
<div class="cell" data-code-copy="true">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r fold-show code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check to see percentage of expected cell values are &lt; 5</span></span>
<span id="cb17-2"></span>
<span id="cb17-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compute the expected values</span></span>
<span id="cb17-4">n_train <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(item_frequency<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>count_train)</span>
<span id="cb17-5">n_test <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(item_frequency<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>count_test) </span>
<span id="cb17-6">n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> n_train <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> n_test</span>
<span id="cb17-7">item_frequency <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&lt;&gt;%</span> </span>
<span id="cb17-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">p =</span> (count_train <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> count_test)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>n,</span>
<span id="cb17-9">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">e_test =</span> p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> n_test,</span>
<span id="cb17-10">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">e_train =</span> p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> n_train)</span>
<span id="cb17-11"></span>
<span id="cb17-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check what percentage of the expected values are less than 5</span></span>
<span id="cb17-13">(pct_expected_small <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>((item_frequency<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>e_test <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (item_frequency<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>e_test <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(item_frequency)))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] 0.5792079</code></pre>
</div>
</div>
<p>We see here that 57.9% of the expected values are very small (less than 5), meaning that the assumption in question is <strong>not</strong> satisfied.</p>
<!-- In addition to this issue, the test and train vectors are not independent. (The test/train split is a random partition of the full dataset. The data assigned to one of the sets is dependent on the data that is sampled for the other.) Independence is another assumption for the $\chi^2$ test. -->
<p>Let’s look at an alternative method.</p>
</section>
<section id="fishers-exact-test" class="level3">
<h3 class="anchored" data-anchor-id="fishers-exact-test">Fisher’s Exact Test</h3>
<p>Again consider a 2 by 3232 contingency table composed of the test and train vectors. We can utilize a test that is acceptable for small sample sizes: Fisher’s exact test can be used to test the null hypothesis that the two factors of a 2-dimensional contingency table are independent (no relationship) vs the alternative that they are not.</p>
<p>Consider first Fisher’s exact test for the original train/test data:</p>
<div class="cell" data-code-copy="true">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1">item_frequency <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb19-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(count_train, count_test) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb19-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fisher.test</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">simulate.p.value =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
    Fisher's Exact Test for Count Data with simulated p-value (based on
    2000 replicates)

data:  .
p-value = 0.0004998
alternative hypothesis: two.sided</code></pre>
</div>
</div>
<p>The p-value is very small indicating that there is sufficient evidence that movie popularity is dependent on the dataset (test or train).</p>
<p>Now consider Fisher’s exact test for our re-sampled train/test data:</p>
<div class="cell" data-code-copy="true">
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1">item_frequency_new <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb21-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(count_train, count_test) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb21-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fisher.test</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">simulate.p.value =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>
    Fisher's Exact Test for Count Data with simulated p-value (based on
    2000 replicates)

data:  .
p-value = 0.07596
alternative hypothesis: two.sided</code></pre>
</div>
</div>
<p>In this case the p-value is large meaning that we fail to reject the null hypothesis that movie popularity is independent of the dataset. In other words, we see a similar popularity pattern in both the test and train data sets that we sampled. These results align with our expectation.</p>
<!-- ### Hypothesis testing of high dimensional (and sparse) discrete data -->
<!-- In a [previous blog post](https://amanda.rbind.io/2019/05/24/new-r-package-hddtest/){target="_blank"} I introduced a new method for testing whether two high dimensional mutlinomial vectors have the same underlying probability vector. Compared to the $\chi^2$ test, this method is more robust in the presence of small values. The R method is available via the `hddtest` package available in the [AmandaRP/hddtest](https://github.com/AmandaRP/hddtest){target="_blank"} GitHub repository. -->
<!-- ```{r class.source = "fold-show"} -->
<!-- #devtools::install_github("AmandaRP/hddtest", build = TRUE, build_opts = c("--no-resave-data", "--no-manual")) -->
<!-- library("hddtest") -->
<!-- ``` -->
<!-- We'll assume that the train and test vectors have an underlying multinomial distribution with parameters ($p_{train}$, $n_{train}$) and ($p_{test}$, $n_{test}$) respectively. (See the [Closing Thoughts](#closing) section at the end for a discussion about the multinomial assumption.) We'd like to test the null hypothesis that $p_{train} = p_{test}$ vs the althernative that they are not equal. To do this we might consider using the `multinom.test` function from the `hddtest` package. However, a simulation experiment shows that the [size](https://en.wikipedia.org/wiki/Size_(statistics)) of the test is not well controlled when the data is stratified by user (see the Appendix at the end of the article). In other words, the test is too sensitive.  -->
<!-- Alternatively, we can consider the null hypothesis that $p_{train}$ and $p_{test}$ are within some neighborhood, $\delta$ (vs the alternative that they are not). What value of $\delta$ should be used? Figure 3 below shows the p-value curves for various values of $\delta$, comparing multiple random test/train splits (teal) and also the provided test & train data (red). We won't actually perform the hypothesis test because we've now peaked at our data. However, you can see that the p-value curve for the provided data looks much different than those for the random test/train splits. -->
<!-- <details> -->
<!--   <summary>View code</summary> -->
<!-- </br>  -->
<!-- ```{r, fig.width=8, fig.height=3.5, message = FALSE, warning=FALSE, echo = TRUE, eval = FALSE, fig.cap='Delta in (0, 2800]. Inset image: Zoomed view of delta in (0, 5].'} -->
<!-- num_reps <- 50 -->
<!-- stratified <- TRUE -->
<!-- vecs2Test <- list(matrix(NA, num_reps, nrow(item_frequency)), matrix(NA, num_reps, nrow(item_frequency))) -->
<!-- for(i in 1:num_reps){ -->
<!--   if(stratified){ -->
<!--     test_sim <-  -->
<!--       data_full %>%  -->
<!--       group_by(user) %>% -->
<!--       slice_sample(prop = pct_test) %>% -->
<!--       ungroup() -->
<!--   }else{ -->
<!--     test_sim <-  -->
<!--       data_full %>%  -->
<!--       slice_sample(prop = pct_test)  -->
<!--   } -->
<!--   # Put remaining data in train: -->
<!--   train_sim <- anti_join(data_full, test_sim) -->
<!--   # Recreate our interaction counts for each item: -->
<!--   item_frequency_sim <-  -->
<!--     full_join( -->
<!--       train_sim %>% group_by(item) %>% count() %>% ungroup(), -->
<!--       test_sim  %>% group_by(item) %>% count() %>% ungroup(), -->
<!--       by = "item" -->
<!--     ) %>% -->
<!--     rename(count_train = n.x, count_test = n.y) %>% -->
<!--     replace_na(list(count_train = 0, count_test = 0)) -->
<!--   # Build a matrix of vectors to test -->
<!--   vecs2Test[[1]][i, ] <- item_frequency_sim$count_train -->
<!--   vecs2Test[[2]][i, ] <- item_frequency_sim$count_test -->
<!-- } -->
<!-- #Perform the test: -->
<!-- delta = c(.00000001, .00001, .0001, .001, .01, .1, .5, .75, seq(from=1,to=2800, by = 100) ) -->
<!-- result_sampled <- vecs2Test %>% multinom.neighborhood.test(delta = delta) -->
<!-- p_sampled <- result_sampled$pvalue_delta -->
<!-- result_original <- multinom.neighborhood.test(x = item_frequency$count_train, y = item_frequency$count_test, delta = delta) -->
<!-- p_original <- result_original$pvalue_delta -->
<!-- dat1 <- data.frame(delta=delta, sampled = t(p_sampled), original = t(p_original)) %>% -->
<!--   gather(-delta, key = "replication", value = pvalue) %>%  -->
<!--   mutate("hypothesis" = str_extract(replication,"\\w{1,}")) -->
<!-- p1 <- ggplot(dat1, aes(x = delta, y = pvalue, group = replication, colour = hypothesis)) +  -->
<!--   geom_line() + -->
<!--   geom_hline(yintercept = 0.05, linetype = "dotted") + -->
<!--   annotate("text", x = 300, y = .09, label = "alpha = 0.05") + -->
<!--   labs(y = "p-value", title = "P-Value Curves for Original and Sampled Train/Test Splits", color = "Dataset") +  -->
<!--   #geom_curve(aes(x = 75, y = .71, xend = 61, yend = .6), curvature = -0.3, arrow = arrow(length=unit(2,"mm")), color = "darkgrey") + -->
<!--   theme_classic() + -->
<!--   theme(title = element_text(face = "bold", size = 14), -->
<!--         panel.grid = element_blank()) -->
<!-- delta = c(.00000001, .00001, .0001, .001, .01, .1, .5, .75, 1:5) -->
<!-- result_sampled <- vecs2Test %>% multinom.neighborhood.test(delta = delta) -->
<!-- p_sampled <- result_sampled$pvalue_delta -->
<!-- result_original <- multinom.neighborhood.test(x = item_frequency$count_train, y = item_frequency$count_test, delta = delta) -->
<!-- p_original <- result_original$pvalue_delta -->
<!-- dat2 <- data.frame(delta=delta, sampled = t(p_sampled), original = t(p_original)) %>% -->
<!--   gather(-delta, key = "replication", value = pvalue) %>%  -->
<!--   mutate("hypothesis" = str_extract(replication,"\\w{1,}")) -->
<!-- p2 <- ggplot(dat2, aes(x = delta, y = pvalue, group = replication, colour = hypothesis)) +  -->
<!--   geom_line() + -->
<!--   labs(y = element_blank()) +  -->
<!--   #geom_curve(aes(x = 75, y = .71, xend = 61, yend = .6), curvature = -0.3, arrow = arrow(length=unit(2,"mm")), color = "darkgrey") + -->
<!--   theme_classic() + -->
<!--   theme(title = element_text(face = "bold", size = 14), -->
<!--         panel.grid = element_blank(), -->
<!--         legend.title = element_blank(), -->
<!--         legend.position = "none" -->
<!--         ) -->
<!-- ggdraw(p1) + -->
<!--   draw_plot(p2, .25, .25, .4, .5)  -->
<!-- ``` -->
<!-- </details> -->
<!-- ```{r, fig.width=8, fig.height=3.5, message = FALSE, warning=FALSE, echo = FALSE, fig.cap='Delta in (0, 2800]. Inset image: Zoomed view of delta in (0, 5].'} -->
<!-- num_reps <- 50 -->
<!-- stratified <- TRUE -->
<!-- vecs2Test <- list(matrix(NA, num_reps, nrow(item_frequency)), matrix(NA, num_reps, nrow(item_frequency))) -->
<!-- for(i in 1:num_reps){ -->
<!--   if(stratified){ -->
<!--     test_sim <-  -->
<!--       data_full %>%  -->
<!--       group_by(user) %>% -->
<!--       slice_sample(prop = pct_test) %>% -->
<!--       ungroup() -->
<!--   }else{ -->
<!--     test_sim <-  -->
<!--       data_full %>%  -->
<!--       slice_sample(prop = pct_test)  -->
<!--   } -->
<!--   # Put remaining data in train: -->
<!--   train_sim <- anti_join(data_full, test_sim) -->
<!--   # Recreate our interaction counts for each item: -->
<!--   item_frequency_sim <-  -->
<!--     full_join( -->
<!--       train_sim %>% group_by(item) %>% count() %>% ungroup(), -->
<!--       test_sim  %>% group_by(item) %>% count() %>% ungroup(), -->
<!--       by = "item" -->
<!--     ) %>% -->
<!--     rename(count_train = n.x, count_test = n.y) %>% -->
<!--     replace_na(list(count_train = 0, count_test = 0)) -->
<!--   # Build a matrix of vectors to test -->
<!--   vecs2Test[[1]][i, ] <- item_frequency_sim$count_train -->
<!--   vecs2Test[[2]][i, ] <- item_frequency_sim$count_test -->
<!-- } -->
<!-- #Perform the test: -->
<!-- delta = c(.00000001, .00001, .0001, .001, .01, .1, .5, .75, seq(from=1,to=2800, by = 100) ) -->
<!-- result_sampled <- vecs2Test %>% multinom.neighborhood.test(delta = delta) -->
<!-- p_sampled <- result_sampled$pvalue_delta -->
<!-- result_original <- multinom.neighborhood.test(x = item_frequency$count_train, y = item_frequency$count_test, delta = delta) -->
<!-- p_original <- result_original$pvalue_delta -->
<!-- dat1 <- data.frame(delta=delta, sampled = t(p_sampled), original = t(p_original)) %>% -->
<!--   gather(-delta, key = "replication", value = pvalue) %>%  -->
<!--   mutate("hypothesis" = str_extract(replication,"\\w{1,}")) -->
<!-- p1 <- ggplot(dat1, aes(x = delta, y = pvalue, group = replication, colour = hypothesis)) +  -->
<!--   geom_line() + -->
<!--   geom_hline(yintercept = 0.05, linetype = "dotted") + -->
<!--   annotate("text", x = 300, y = .09, label = "alpha = 0.05") + -->
<!--   labs(y = "p-value", title = "P-Value Curves for Original and Sampled Train/Test Splits", color = "Dataset") +  -->
<!--   #geom_curve(aes(x = 75, y = .71, xend = 61, yend = .6), curvature = -0.3, arrow = arrow(length=unit(2,"mm")), color = "darkgrey") + -->
<!--   theme_classic() + -->
<!--   theme(title = element_text(face = "bold", size = 14), -->
<!--         panel.grid = element_blank()) -->
<!-- delta = c(.00000001, .00001, .0001, .001, .01, .1, .5, .75, 1:5) -->
<!-- result_sampled <- vecs2Test %>% multinom.neighborhood.test(delta = delta) -->
<!-- p_sampled <- result_sampled$pvalue_delta -->
<!-- result_original <- multinom.neighborhood.test(x = item_frequency$count_train, y = item_frequency$count_test, delta = delta) -->
<!-- p_original <- result_original$pvalue_delta -->
<!-- dat2 <- data.frame(delta=delta, sampled = t(p_sampled), original = t(p_original)) %>% -->
<!--   gather(-delta, key = "replication", value = pvalue) %>%  -->
<!--   mutate("hypothesis" = str_extract(replication,"\\w{1,}")) -->
<!-- p2 <- ggplot(dat2, aes(x = delta, y = pvalue, group = replication, colour = hypothesis)) +  -->
<!--   geom_line() + -->
<!--   labs(y = element_blank()) +  -->
<!--   #geom_curve(aes(x = 75, y = .71, xend = 61, yend = .6), curvature = -0.3, arrow = arrow(length=unit(2,"mm")), color = "darkgrey") + -->
<!--   theme_classic() + -->
<!--   theme(title = element_text(face = "bold", size = 14), -->
<!--         panel.grid = element_blank(), -->
<!--         legend.title = element_blank(), -->
<!--         legend.position = "none" -->
<!--         ) -->
<!-- ggdraw(p1) + -->
<!--   draw_plot(p2, .25, .25, .4, .5)  -->
<!-- ``` -->
</section>
</section>
<section id="closing" class="level2">
<h2 class="anchored" data-anchor-id="closing">Closing Thoughts</h2>
<p>Using a few methods (vizualization, Gini index, and hypothesis testing) we observed that the provided test data set did not follow the same popularity distribution as the training set.</p>
<p>Another scenario to consider: Should we always expect our train and test data to have the same distribution? What if the test/train split were based on time (i.e.&nbsp;we use earlier data to train the model and use the most recent data to test). How much difference is acceptable? After all, movie popularity changes over time (thinking about our particular application). This might be an interesting topic for a future blog post.</p>
<!-- One might also argue that we should not assume a multinomial distribution for the item counts as we did for the hypothesis testing. If there is correlation between the items (e.g. if the first movie in a series was popular, we might expect the sequel to also do well), then the Dirichlet-multinomial distribution may be a better assumption. In this case, a different hypothesis tests is required. -->
<p>If you would like to provide feedback on this blog post, you can contact me via Twitter (<span class="citation" data-cites="DrAmandaRP">@DrAmandaRP</span>). Thanks for reading!</p>
<!-- <details> -->
<!--   <summary>**Appendix**: Size Study</summary> -->
<!-- To understand the size of the hypothesis test (i.e. the `multinom.test` from the `hddtest` package) for the application of comparing the test and training datasets, let's run a simulation sampling mulitple test/train splits.  -->
<!-- ```{r eval = FALSE, class.source = 'fold-show'} -->
<!-- data_full_sim <- data_full -->
<!-- alpha <- 0.05 -->
<!-- num_reps <- 10000 -->
<!-- stratified <- FALSE -->
<!-- result <- array(NA, dim = num_reps) -->
<!-- for(i in 1:num_reps){ -->
<!--   if(stratified){ -->
<!--     test_sim <-  -->
<!--       data_full_sim %>%  -->
<!--       group_by(user) %>% -->
<!--       slice_sample(prop = pct_test) %>% -->
<!--       ungroup() -->
<!--   }else{ -->
<!--     test_sim <-  -->
<!--       data_full_sim %>%  -->
<!--       slice_sample(prop = pct_test)  -->
<!--   } -->
<!--   # Put remaining data in train: -->
<!--   train_sim <- anti_join(data_full_sim, test_sim) -->
<!--   # Recreate our interaction counts for each item: -->
<!--   item_frequency_sim <-  -->
<!--     full_join( -->
<!--       train_sim %>% group_by(item) %>% count() %>% ungroup(), -->
<!--       test_sim  %>% group_by(item) %>% count() %>% ungroup(), -->
<!--       by = "item" -->
<!--     ) %>% -->
<!--     rename(count_train = n.x, count_test = n.y) %>% -->
<!--     replace_na(list(count_train = 0, count_test = 0)) -->
<!--   result[i] <- multinom.test(item_frequency_sim$count_train, item_frequency_sim$count_test)$pvalue  -->
<!-- } -->
<!-- mean(result <= alpha) -->
<!-- # size for stratified data: 0.2351 (using 10K reps). Not controlling size well.  -->
<!-- # size for non-stratified data: 0.0517 (using 10K reps) -->
<!-- ``` -->
<!-- Using 10K replications and $\alpha = 0.05$, the size of the test on the stratified sampled data is 0.2351 (not well controlled). However, the size of the test for the non-stratified sampled data is 0.0517, which is much better. In other words, the test is too sensitive for the stratified sampled dataset. -->
<!-- </details>  -->


</section>

 ]]></description>
  <category>machine learning</category>
  <category>rstats</category>
  <guid>https://amanda.rbind.io/posts/2020-11-08-mirror-mirror-on-the-wall-does-my-test-data-reflect-my-training-data-at-all/index.html</guid>
  <pubDate>Sun, 08 Nov 2020 00:00:00 GMT</pubDate>
  <media:content url="https://amanda.rbind.io/posts/2020-11-08-mirror-mirror-on-the-wall-does-my-test-data-reflect-my-training-data-at-all/mirror_cartoon.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Shiny R-Ladies</title>
  <dc:creator>Amanda Peterson</dc:creator>
  <link>https://amanda.rbind.io/posts/2020-02-07-shiny-r-ladies/index.html</link>
  <description><![CDATA[ 




<p>Earlier this year I had the pleasure of talking about R <a href="https://CRAN.R-project.org/package=shiny" target="_blank"><code>shiny</code></a> at the <a href="https://rladies-baltimore.github.io/" target="_blank">Baltimore R-Ladies</a> Meetup. <code>shiny</code> is an R package for building interactive web applications.</p>
<p>We made an app showing the wildfires in south eastern Australia along with historic rainfall and temperature data. This dataset was provided as a <a href="https://github.com/rfordatascience/tidytuesday/blob/master/data/2020/2020-01-07/readme.md">Tidy Tuesday</a> dataset by the R for Data Science Learning Community.</p>
<p>Here is a peak at the app…</p>
<p></p><div id="tweet-91251"></div><script>tweet={"url":"https:\/\/twitter.com\/RLadiesBmore\/status\/1222660774134370304","author_name":"R-Ladies Baltimore","author_url":"https:\/\/twitter.com\/RLadiesBmore","html":"\u003Cblockquote class=\"twitter-tweet\" align=\"center\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E.\u003Ca href=\"https:\/\/twitter.com\/DrAmandaRP?ref_src=twsrc%5Etfw\"\u003E@DrAmandaRP\u003C\/a\u003E leading an interactive workshop demo-ing a \u003Ca href=\"https:\/\/twitter.com\/hashtag\/rstats?src=hash&amp;ref_src=twsrc%5Etfw\"\u003E#rstats\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/hashtag\/shiny?src=hash&amp;ref_src=twsrc%5Etfw\"\u003E#shiny\u003C\/a\u003E app using \u003Ca href=\"https:\/\/twitter.com\/hashtag\/AustralianFires?src=hash&amp;ref_src=twsrc%5Etfw\"\u003E#AustralianFires\u003C\/a\u003E data \u003Ca href=\"https:\/\/t.co\/aye5Kwq7XH\"\u003Epic.twitter.com\/aye5Kwq7XH\u003C\/a\u003E\u003C\/p\u003E&mdash; R-Ladies Baltimore (@RLadiesBmore) \u003Ca href=\"https:\/\/twitter.com\/RLadiesBmore\/status\/1222660774134370304?ref_src=twsrc%5Etfw\"\u003EJanuary 29, 2020\u003C\/a\u003E\u003C\/blockquote\u003E\n\u003Cscript async src=\"https:\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E\n","width":550,"height":null,"type":"rich","cache_age":"3153600000","provider_name":"Twitter","provider_url":"https:\/\/twitter.com","version":"1.0"};document.getElementById("tweet-91251").innerHTML = tweet["html"];</script><p></p>
<p>And, a few more pictures from the event…</p>
<p></p><div id="tweet-75607"></div><script>tweet={"url":"https:\/\/twitter.com\/stephaniehicks\/status\/1222656050202988544","author_name":"Stephanie Hicks","author_url":"https:\/\/twitter.com\/stephaniehicks","html":"\u003Cblockquote class=\"twitter-tweet\" align=\"center\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EWe’re getting started at the January \u003Ca href=\"https:\/\/twitter.com\/RLadiesBmore?ref_src=twsrc%5Etfw\"\u003E@RLadiesBmore\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/hashtag\/meetup?src=hash&amp;ref_src=twsrc%5Etfw\"\u003E#meetup\u003C\/a\u003E with \u003Ca href=\"https:\/\/twitter.com\/DrAmandaRP?ref_src=twsrc%5Etfw\"\u003E@DrAmandaRP\u003C\/a\u003E talking about \u003Ca href=\"https:\/\/twitter.com\/hashtag\/rstats?src=hash&amp;ref_src=twsrc%5Etfw\"\u003E#rstats\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/hashtag\/shiny?src=hash&amp;ref_src=twsrc%5Etfw\"\u003E#shiny\u003C\/a\u003E apps! \u003Ca href=\"https:\/\/t.co\/hdSmo3sqj2\"\u003Epic.twitter.com\/hdSmo3sqj2\u003C\/a\u003E\u003C\/p\u003E&mdash; Stephanie Hicks (@stephaniehicks) \u003Ca href=\"https:\/\/twitter.com\/stephaniehicks\/status\/1222656050202988544?ref_src=twsrc%5Etfw\"\u003EJanuary 29, 2020\u003C\/a\u003E\u003C\/blockquote\u003E\n\u003Cscript async src=\"https:\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E\n","width":550,"height":null,"type":"rich","cache_age":"3153600000","provider_name":"Twitter","provider_url":"https:\/\/twitter.com","version":"1.0"};document.getElementById("tweet-75607").innerHTML = tweet["html"];</script><p></p>
<p>Slides: (Sorry… we’re having technical difficulties.)</p>



 ]]></description>
  <guid>https://amanda.rbind.io/posts/2020-02-07-shiny-r-ladies/index.html</guid>
  <pubDate>Fri, 07 Feb 2020 00:00:00 GMT</pubDate>
  <media:content url="https://amanda.rbind.io/posts/2020-02-07-shiny-r-ladies/shiny_rladies.png" medium="image" type="image/png" height="83" width="144"/>
</item>
<item>
  <title>DC R Conference Recap</title>
  <dc:creator>Amanda Peterson</dc:creator>
  <link>https://amanda.rbind.io/posts/2019-11-12-dcr/index.html</link>
  <description><![CDATA[ 




<!-- TODO: Fix twitter inserts. -->
<p><strong>The overview</strong>: <a href="https://dc.rstats.ai/">DC R</a> 2019, hosted by Lander Analytics, was held Nov 7-9 at Georgetown University. The short action-packed conference consisted of one-day workshops and two days of talks. Find the videos on the <a href="https://dc.rstats.ai/">DC R website</a> (available soon) and associated tweets via the <code>#rstatsdc</code> hashtag on Twitter. Also, see <a href="https://www.jaredlander.com/2019/11/the-r-conference-returns-to-dc-for-a-second-year/">Jared Lander’s blog post</a> for a higher level overview of the conference with lots of fun pics.</p>
<p>Highlights for me personally included Malorie Hughes’ presentation of <code>flexdashboard</code>. Somehow in the hype of R <a href="https://shiny.rstudio.com/"><code>shiny</code></a>, I had missed this dashboard tool. I was also excited to learn about Dr Dasgupta’s <code>coursedown</code> package, which I’m looking forward to testing out for the class that I teach. Another highlight was learning more about the implementation of Google’s BERT model in R by Jon Harmon &amp; Jonathan Bratt.</p>
<p><strong>Read more</strong>: Below are my notes from selected talks. I’ve divided it into the following sections: Communication, Modeling, Spatial Analysis, General R Programming, and A Few Remaining Random Bits.</p>
<section id="comms" class="level2">
<h2 class="anchored" data-anchor-id="comms">Communication (Dashboards, Websites, and Data Viz)</h2>
<p><strong>Coursedown: Managing Course Materials Using R Techniques</strong>, Dr Abhijit Dasgupta, <a href="https://twitter.com/webbedfeet"><em>@webbedfeet</em></a></p>
<ul>
<li>Package available <a href="https://github.com/webbedfeet/coursedown">on GitHub</a>.</li>
<li>Use <a href="https://github.com/ropensci/drake"><code>drake</code></a> to tie it all together</li>
</ul>
<p><strong>Dashboarding Like a Boss</strong>, Malorie Hughes, <a href="https://twitter.com/data_all_day"><em>@data_all_day</em></a></p>
<ul>
<li>Don’t email your results. Create a dashboard!</li>
<li>Talk featured a <a href="https://maloriejhughes.github.io/Dashboarding-Tutorial/">demo of <code>flexdashboard</code></a>. See more info about <a href="https://cran.r-project.org/web/packages/flexdashboard/index.html"><code>flexdashboard</code></a> on <a href="https://rmarkdown.rstudio.com/flexdashboard/">RStudio’s website</a>.<br>
</li>
<li>Create using R Markdown. Just requires a different output type in the YAML header.</li>
<li>See her <a href="https://github.com/maloriejhughes?tab=repositories">GitHub repo</a> for templates</li>
<li>Tips for making your output look pretty on the dashboard:
<ul>
<li>Use <a href="https://cran.r-project.org/web/packages/printr/index.html"><code>printr</code></a> to make printing R output look better. Less effort than <code>knitr::kable()</code>.</li>
<li>Use <a href="https://cran.r-project.org/web/packages/summarytools/index.html"><code>summarytools</code></a>. It’s not great YET for R Markdown, but keep tabs on it.</li>
<li>For model output, use <a href="https://cran.r-project.org/web/packages/stargazer/index.html"><code>stargazer</code></a></li>
<li><code>DT::datatable()</code> for interactive table (see advanced options in this function for fancier options for the table)</li>
<li>For interactive plots: <a href="https://cran.r-project.org/web/packages/highcharter/index.html"><code>highcharter</code></a>. Assign colors with <code>colorize()</code>.</li>
</ul></li>
<li>She included an export/download data button on her dashboard. See her code to learn how to do that.</li>
<li>See Malorie’s official DC R dashboard:</li>
</ul>
<center>
<p></p><div id="tweet-38067"></div><script>tweet={"url":"https:\/\/twitter.com\/rstatsdc\/status\/1192878268850081792","author_name":"R Conference | Government & Public Sector","author_url":"https:\/\/twitter.com\/rstatsdc","html":"\u003Cblockquote class=\"twitter-tweet\" align=\"center\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EThe \u003Ca href=\"https:\/\/twitter.com\/hashtag\/rstatsdc?src=hash&amp;ref_src=twsrc%5Etfw\"\u003E#rstatsdc\u003C\/a\u003E Twitter Leaderboard through the 1st quarter of DCR 2019!\u003Ca href=\"https:\/\/twitter.com\/JonTheGeek?ref_src=twsrc%5Etfw\"\u003E@JonTheGeek\u003C\/a\u003E &amp; \u003Ca href=\"https:\/\/twitter.com\/robinson_es?ref_src=twsrc%5Etfw\"\u003E@robinson_es\u003C\/a\u003E take the early lead.\u003Cbr\u003E\u003Cbr\u003EFollow along with our LIVE dashboard made by \u003Ca href=\"https:\/\/twitter.com\/data_all_day?ref_src=twsrc%5Etfw\"\u003E@data_all_day\u003C\/a\u003E. Top 2 wins \u003Ca href=\"https:\/\/twitter.com\/Sony?ref_src=twsrc%5Etfw\"\u003E@Sony\u003C\/a\u003E headphones!\u003Ca href=\"https:\/\/t.co\/zWfWYSfqJY\"\u003Ehttps:\/\/t.co\/zWfWYSfqJY\u003C\/a\u003E \u003Ca href=\"https:\/\/t.co\/HNuQqd7fvN\"\u003Epic.twitter.com\/HNuQqd7fvN\u003C\/a\u003E\u003C\/p\u003E&mdash; R Conference | Government &amp; Public Sector (@rstatsdc) \u003Ca href=\"https:\/\/twitter.com\/rstatsdc\/status\/1192878268850081792?ref_src=twsrc%5Etfw\"\u003ENovember 8, 2019\u003C\/a\u003E\u003C\/blockquote\u003E\n\u003Cscript async src=\"https:\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E\n","width":550,"height":null,"type":"rich","cache_age":"3153600000","provider_name":"Twitter","provider_url":"https:\/\/twitter.com","version":"1.0"};document.getElementById("tweet-38067").innerHTML = tweet["html"];</script><p></p>
</center>
<p><strong>Using networkD3 and R to Visualize and Explore Relationships in Data</strong>, Dr Ami Gates, <a href="https://twitter.com/DrGates309"><em>@DrGates309</em></a></p>
<ul>
<li>Talk focused on <a href="https://cran.r-project.org/web/packages/networkD3/index.html"><code>networkD3</code></a>, which is nice for interactive networks.</li>
<li>Other options for visualizing networks: <a href="https://cran.r-project.org/web/packages/igraph/index.html"><code>igraph</code></a>, <code>ggnet2()</code> (part of <a href="https://cran.r-project.org/web/packages/GGally/">GGally</a>), and <a href="https://cran.r-project.org/web/packages/visNetwork/index.html"><code>visNetwork</code></a></li>
<li><a href="https://cran.r-project.org/web/packages/arules/index.html"><code>arules</code></a> package for association mining in R. She used it to find associated words considering both how often words appear together and also how often they appear in same dataset (in her example, how often in the same tweet)</li>
<li><a href="https://cran.r-project.org/web/packages/arulesViz/index.html"><code>arulesViz</code></a> - for visualization of association rules</li>
<li>She used the <code>igraph</code> package to massage the data before giving it to <code>networkD3</code></li>
</ul>
<p><strong>Better DataViz in ggplot2: Tips, Tricks, and Examples</strong>, Alex Engler, <a href="https://twitter.com/AlexCEngler"><em>@AlexCEngler</em></a></p>
<ol type="1">
<li><a href="https://cran.r-project.org/web/packages/ggplot2/index.html"><code>ggplot2</code></a> + <a href="https://cran.r-project.org/web/packages/sf/index.html"><code>sf</code></a> for bivariate plots: <code>ggplot2::geom_sf()</code>. See the <a href="https://www.r-spatial.org/r/2018/10/25/ggplot2-sf.html">Drawing beautiful maps with R, sf, and ggplot2 sf</a> tutorial on r-spatial.org.</li>
<li><a href="https://github.com/clauswilke/ggtext"><code>ggtext</code></a> to add text to plots using markdown. Includes text formatting. Showed an example of how to highlight parts of title to match highlighted part of graph.</li>
<li><a href="https://cran.r-project.org/web/packages/gghighlight/"><code>gghighlight</code></a> to highlight parts of graph with color (and grey out rest)</li>
<li><code>ggplot2::annotation_custom()</code> to add a plot on top of another. Create a “grobe” and drop it somewhere. Use to zoom in to a map with a bounding box. (My comment: seems similar to <a href="https://cran.r-project.org/web/packages/cowplot/index.html"><code>cowplot</code></a>).</li>
<li><code>geofacet::facet_geo()</code> to create a plot per state, positioned in the location of the states on the map.</li>
<li><code>ggplot2</code> extensions: See www.ggplot2-exts.org/gallery and the <a href="https://cran.r-project.org/web/packages/rayshader/index.html"><code>rayshader</code></a> package.</li>
</ol>
</section>
<section id="modeling" class="level2">
<h2 class="anchored" data-anchor-id="modeling">Modeling</h2>
<p><strong>RBERT: Cutting Edge NLP in R</strong>, Jon Harmon, <a href="https://twitter.com/JonTheGeek"><em>@JonTheGeek</em></a></p>
<ul>
<li>BERT: <strong>B</strong>idirectional <strong>E</strong>ncoder <strong>R</strong>epresentations from <strong>T</strong>ransformers. Transfer learning for natural language processing. Created by Google. <a href="https://github.com/jonathanbratt/RBERT">RBERT</a> is the R implementation.</li>
<li>Older embeddings have one embedding per word. Can’t help this situation: “I saw the branch on the bank.” vs “I saw the branch of the bank.” BERT addresses this issue.</li>
<li><a href="https://github.com/jonathanbratt/RBERTviz"><code>RBERTviz</code></a>: Visualize attention and PCA. Let’s you see how BERT is thinking. Showed an interactive demo— go watch the video!</li>
<li>BERT has 12 layers.</li>
<li>RBERT usable now (available on GitHub), but the Jon and Jonathan are making it more user-friendly. Goal: On CRAN by end of 2019</li>
<li>Works with tensorflow 2.0 (in testing)</li>
<li>Example shown: Used RBERT to pull out features for <a href="https://cran.r-project.org/web/packages/xgboost/index.html">xgboost</a> model.</li>
<li>Slides available <a href="https://raw.githack.com/jonthegeek/dcrbert/master/dcrbert.html#1">here</a></li>
</ul>
<p><strong>Optimizing Topic Models for Classification Tasks</strong>, Tommy Jones, <a href="https://twitter.com/thos_jones"><em>@thos_jones</em></a></p>
<ul>
<li>Performing PhD research to optimize LDA topic models</li>
<li>Cousin to LDA: Text embeddings (considered state of the art). In his words, LDA stopped being cared about after deep learning came along. However, he thinks the LDA work was never completed to determine a good LDA model. He thinks LDA might be competitive with deep neural nets if tuned appropriately.</li>
<li>Walked through an example of classifying 20newsgroups</li>
<li>Tech stack: <a href="https://cran.r-project.org/web/packages/textmineR/index.html"><code>textmineR</code></a> (maintained by Tommy), <a href="https://cran.r-project.org/web/packages/randomForest/index.html"><code>randomForest</code></a> (simple so he could focus more on LDA), <a href="https://cran.r-project.org/web/packages/SigOptR/index.html"><code>SigOptR</code></a>, <a href="https://cran.r-project.org/web/packages/cloudml/index.html"><code>cloudml</code></a>, <a href="https://cran.r-project.org/web/packages/magrittr/index.html"><code>magrittr</code></a>, <a href="https://cran.r-project.org/web/packages/stringr/index.html"><code>stringr</code></a>, <code>parallel</code> (part of R-core)</li>
<li><code>SigOpt</code>: ensemble of Bayesian optimizers for picking hyperparmeters (more efficient than grid search). SigOptR is an R API for <a href="https://sigopt.com/">SigOpt</a>. -Used unigrams, removed stopwords, and words that were seen in less than 5 docs</li>
<li>Optimized for accuracy and coherence. LDA was way more accurate than LSA. Showed a accuracy vs topic coherence.</li>
</ul>
<p><strong>Topic Modeling Consumer Complaints at the Federal Reserve</strong>, BJ Bloom, <a href="https://twitter.com/bj_bloom"><em>@bj_bloom</em></a></p>
<ul>
<li>Goal: Use consumer complaints to inform risk analysis for Federal Reserve Board</li>
<li>Used LDA topic modeling</li>
<li>Main LDA packages in R: <a href="https://cran.r-project.org/web/packages/lda/index.html"><code>lda</code></a> (old, fine), <a href="https://cran.r-project.org/web/packages/topicmodels/index.html"><code>topicmodels</code></a> (special snowflake, have to re-index to 0, tricky to use), <a href="https://cran.r-project.org/web/packages/stm/index.html"><code>stm</code></a> (recommend, structural topic modeling, can use to incorporate metadata into topic model), <a href="https://cran.r-project.org/web/packages/textmineR/index.html"><code>textmineR</code></a> (recommend, in his opinion includes diagnostic measures that make sense)</li>
<li>In his words, “Don’t use <a href="https://cran.r-project.org/web/packages/tm/index.html"><code>tm</code></a>. It had its place back in the day.” Instead, he’s a fan of <a href="https://cran.r-project.org/web/packages/tidytext/index.html"><code>tidytext</code></a>.</li>
<li>Other R packages used: <a href="https://cran.r-project.org/web/packages/textrank/index.html"><code>textrank</code></a> (for pagerank)</li>
</ul>
</section>
<section id="spatial" class="level2">
<h2 class="anchored" data-anchor-id="spatial">Spatial Analysis</h2>
<p><strong>The Care and Feeding of Spatial Data</strong>, Angela Li, <a href="https://twitter.com/CivicAngela"><em>@CivicAngela</em></a></p>
<ul>
<li>Slides available <a href="https://docs.google.com/presentation/d/1BHlrSZWmw9tRWfYFVsRLNhAoX6KzhOhsnezTqL-R0sU/edit#slide=id.g6aeb55b281_0_971">here</a></li>
<li>She described the steps <em>before</em> the fancy plots and regression, focusing on the data.</li>
<li>Two types of spatial data:
<ul>
<li>Vector data - points lines polygons (she focused more on this)</li>
<li>Raster data - grids, pixels, cells</li>
</ul></li>
<li>Geo-coding: <code>tmaptools::geocode_OSM(“Georgetown University”)</code> gives coordinates (to translate human spatial data to computer understandable spatial data). Note that OSM = “open street map.” Talk to your GIS librarian (or if you have ARCGis) to get coords.</li>
<li>In her words: “Spatial file formats are confusing.”</li>
<li>Spatial data formats: <code>.shp</code> (shapefile made up of 4 files), <code>.geojson</code> (lots of web-based mapping), <code>.gpkg</code> (new and good, but not common yet), <code>.csv</code>, <code>.tiff</code> (for raster data)</li>
<li>Library she uses: <a href="https://cran.r-project.org/web/packages/sf/index.html"><code>sf</code></a> package. <code>st_read()</code> or <code>read_sf()</code> to create a tidy <code>sf</code> data frame.</li>
<li>Her tech stack: geoDa, QGIS, ArcGIS, PostGIS, CART, R</li>
<li>R packages she uses the most (packages in parens are the “comparable” non-spatial versions):
<ul>
<li><a href="https://cran.r-project.org/web/packages/sf/index.html"><code>sf</code></a> (readr, tidyr, dplyr)</li>
<li><a href="https://cran.r-project.org/web/packages/tmap/index.html"><code>tmap</code></a> (ggplot2)</li>
<li><a href="https://cran.r-project.org/web/packages/spdep/index.html"><code>spdep</code></a> (glmnet)</li>
<li><a href="https://cran.r-project.org/web/packages/sp/index.html"><code>sp</code></a> (data.table)</li>
</ul></li>
<li><a href="https://cran.r-project.org/web/packages/rayshader/index.html"><code>rayshader</code></a> for 3D plotting.<br>
</li>
<li>Use <a href="https://cran.r-project.org/web/packages/mapview/index.html"><code>mapview</code></a> for GIS-like experience</li>
<li>Think beyond dots on a map. Are there clusters? Look at spatial auto-correlation and spatially constrained clustering.</li>
<li>Pre release of <a href="https://github.com/lixun910/rgeoda"><code>rgeoda</code></a> on GitHub</li>
<li>See <code>#rspatial</code> on Twitter</li>
<li>Most important slide she’s ever made in her life:</li>
</ul>
<center>
<div class="cell">
<div class="cell-output-display">
<p><img src="https://amanda.rbind.io/posts/2019-11-12-dcr/spatialsearch.jpeg" class="img-fluid" style="width:80.0%"></p>
</div>
</div>
</center>
<p><strong>R is Not Just Basic Stats: Think Spatially!</strong>, Tatyana Tsvetovat, <a href="https://twitter.com/t_tsvet"><em>@t_tsvet</em></a></p>
<ul>
<li>Divided household: She’s an R enthusiast and her husband is a Python fan 😱</li>
<li>Packages she uses: <a href="https://cran.r-project.org/web/packages/rgdal/index.html"><code>rgdal</code></a>, <a href="https://cran.r-project.org/web/packages/rgeos/index.html"><code>rgeos</code></a>, <a href="https://cran.r-project.org/web/packages/sp/index.html"><code>sp</code></a>, <a href="https://cran.r-project.org/web/packages/spatstat/index.html"><code>spatstat</code></a>, <a href="https://cran.r-project.org/web/packages/kernlab/index.html"><code>kernlab</code></a>, <a href="https://cran.r-project.org/web/packages/zoo/index.html"><code>zoo</code></a></li>
</ul>
</section>
<section id="general" class="level2">
<h2 class="anchored" data-anchor-id="general">General R Programming</h2>
<p><strong>Ten Tremendous Tricks in the Tidyverse</strong>, David Robinson, <a href="https://twitter.com/drob"><em>@drob</em></a></p>
<p>Be sue to catch his <code>#tidytuesday</code> screen casts <a href="https://www.youtube.com/playlist?list=PLEtQC6FY-llkqIhZjI1TYkm4cV6WjobTC">on YouTube</a>. Ten tricks that people have liked from his screen casts:</p>
<ol type="1">
<li><code>count()</code>: One of the most used EDA functions</li>
<li><code>count(column, sort, wt, name)</code>: Create a new variable within count. For example: <code>count(decade = 10 * (year %/% 10)</code> to produce counts for each decade.</li>
<li><code>add_count()</code> adds a count column (really useful to combine with filter to get <code>x</code> with a minimum count)</li>
<li>Use <code>summarize()</code> to create a list column. Looks like <code>data %&gt;% groupby() %&gt;% summarize</code>. Example: <code>summarize(test = list(t.test(avg_score)))</code> Then use broom to visualize. See <a href="https://r4ds.had.co.nz/many-models.html">chapter 25 of R for Data Science</a>.</li>
<li>Use the combination of: <code>count()</code>, <code>fct_reorder()</code> (to turn column into ordered factor), <code>geom_col</code> (use instead of <code>geom_bar(stat = ‘idendtity’))</code>, <code>coord_flip()</code>,<br>
</li>
<li><code>fct_lump()</code> to combine least/most common levels together</li>
<li><code>scale_x</code> or <code>y_log10()</code> to use log scale. In his words: “I suspect much more data is log-normal than normal.”</li>
<li><code>tidyr::crossing()</code> to find all combinations of multiple vectors. Example: <code>crossing(a = 1:3, b = A:Z, c = 10:20)</code>. Can use for simulations in place of for-loops.</li>
<li><code>separate()</code> to split a column into multiple columns based on a regex</li>
<li><code>extract()</code> to extract information from a column based on a regex</li>
</ol>
<center>
<p></p><div id="tweet-33422"></div><script>tweet={"url":"https:\/\/twitter.com\/drob\/status\/1193212461773545472","author_name":"David Robinson","author_url":"https:\/\/twitter.com\/drob","html":"\u003Cblockquote class=\"twitter-tweet\" align=\"center\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EMy \u003Ca href=\"https:\/\/twitter.com\/hashtag\/rstatsdc?src=hash&amp;ref_src=twsrc%5Etfw\"\u003E#rstatsdc\u003C\/a\u003E talk in a nutshell \u003Ca href=\"https:\/\/t.co\/Ay723zIFii\"\u003Epic.twitter.com\/Ay723zIFii\u003C\/a\u003E\u003C\/p\u003E&mdash; David Robinson (@drob) \u003Ca href=\"https:\/\/twitter.com\/drob\/status\/1193212461773545472?ref_src=twsrc%5Etfw\"\u003ENovember 9, 2019\u003C\/a\u003E\u003C\/blockquote\u003E\n\u003Cscript async src=\"https:\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E\n","width":550,"height":null,"type":"rich","cache_age":"3153600000","provider_name":"Twitter","provider_url":"https:\/\/twitter.com","version":"1.0"};document.getElementById("tweet-33422").innerHTML = tweet["html"];</script><p></p>
</center>
<p><strong>Raising baby with R</strong>, Jared Lander, <a href="https://twitter.com/jaredlander"><em>@jaredlander</em></a></p>
<ul>
<li>Jared and his wife recently had a baby. He described his use of R to choose the baby’s name and analyze its eating, sleeping, and poo patterns.</li>
<li>See the <a href="https://cran.r-project.org/web/packages/babynames/index.html"><code>babynames</code></a> package for data about popularity of baby names</li>
<li>Analyzing time series data: <a href="https://cran.r-project.org/web/packages/tsibble/index.html"><code>tsibble</code></a>, <a href="https://cran.r-project.org/web/packages/fable/index.html"><code>fable</code></a>, <a href="https://cran.r-project.org/web/packages/feasts/index.html"><code>feast</code></a>. Use <code>model()</code> function in this package to fit <code>ts</code> models. Use <code>autoplot()</code> to plot <code>ts</code> data. <code>index_by()</code> is the <code>ts</code> equiv of <code>group_by()</code>.</li>
<li><a href="https://github.com/mitchelloharawild/fable.prophet"><code>fable.prophet</code></a> package to use prophet in a fable framework. Used this to perform change-point detection.</li>
<li>Slides available <a href="https://jaredlander.com/content/2019/11/BabyData.html#1">here</a>.</li>
</ul>
<p><strong>R and Python coexisting in the same Development environment</strong>, Dan Chen, <a href="https://twitter.com/chendaniely"><em>@chendaniely</em></a>, (Author of “Pandas for Everyone”)</p>
<ul>
<li>What he believes Python does better: environments, web development, and hardware</li>
<li>What he likes about R: communication (<code>shiny</code>, <code>rmarkdown</code>, <code>ggplot2</code>)</li>
<li>Python environments in R:</li>
</ul>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">conda_envs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> reticulate<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cond_list</span>()</span>
<span id="cb1-2">conda_envs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>name[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]] <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#have to restart R if you want to change env again)</span></span></code></pre></div>
</div>
<ul>
<li>Most data scientists using Python use anaconda.</li>
<li>Don’t mix anaconda R package installation with <code>install.packages()</code></li>
<li>New model pipeline in R: <a href="https://cran.r-project.org/web/packages/rsample/index.html"><code>rsample</code></a>, <a href="https://cran.r-project.org/web/packages/recipes/index.html"><code>recipes</code></a>, <a href="https://cran.r-project.org/web/packages/parsnip/index.html"><code>parsnip</code></a>, <a href="https://cran.r-project.org/web/packages/yardstick/index.html"><code>yardstick</code></a><br>
</li>
<li>Described workflow: Python <code>joblib</code> for “pickling” a model in python. Read it into R. Then use R <code>shiny</code> to display</li>
<li>[<code>blogdown</code>] supports jupyter notebooks</li>
<li><code>knitpy</code>: <code>knitr</code> implementation in python</li>
<li>Use Apache arrow to pass datasets between R and python</li>
<li>Information on installing python <a href="https://swcarpentry.github.io/python-novice-inflammation/setup/index.html">here</a></li>
<li>Slides available <a href="https://speakerdeck.com/chendaniely/using-python-with-r">here</a></li>
</ul>
<p><strong>Managing Your Cloud: Working with APIs</strong>, Marck Vaisman, <a href="https://twitter.com/wahalulu"><em>@wahalulu</em></a></p>
<ul>
<li>Discussed how to use R to interact with APIs (mostly for the consumption of data)</li>
<li><a href="https://cran.r-project.org/web/packages/plumber/index.html"><code>plumber</code></a> for building and serving up APIs</li>
<li>three package to be aware of: <a href="https://cran.r-project.org/web/packages/httr/index.html"><code>httr</code></a> (Part of the <code>tidyverse</code>. More abstract/easier than <code>curl</code> package), <a href="https://cran.r-project.org/web/packages/curl/index.html"><code>curl</code></a> (new package), <a href="https://cran.r-project.org/web/packages/jsonlite/index.html"><code>jsonlite</code></a></li>
</ul>
</section>
<section id="random" class="level2">
<h2 class="anchored" data-anchor-id="random">A Few Remaining Random Bits</h2>
<ul>
<li>Check out the <a href="https://github.com/sctyner/memer"><code>memeR</code></a> package by <a href="https://twitter.com/sctyner"><em>@sctyner</em></a></li>
<li>R Markdown tips from <a href="https://twitter.com/datadanya"><em>@datadanya</em></a>: Include <code>session_info()</code> at the end of all markdown docs. See https://bootswatch.com/3/ for a list of R Markdown themes</li>
<li>Use <a href="https://cran.r-project.org/web/packages/gmailr/index.html"><code>gmailr</code></a> to send email from R</li>
<li>See <a href="https://cran.r-project.org/web/packages/learnr/index.html"><code>learnr</code></a> for creating teaching materials. (Use in conjunction with <a href="https://rstudio-education.github.io/gradethis/."><code>gradethis</code></a></li>
<li>For conversations about R administration, see <code>#radmins</code> on Twitter, <a href="https://solutions.rstudio.com/">solutions.rstudio.com</a>, or the radmins channel on <a href="https://community.rstudio.com/">community.rstudio.com</a>. Management and IT folks should watch Kelly O’Briant’s talk, <a href="https://speakerdeck.com/kellobri/a-year-of-talking-about-devops">Reflections on a Year Spent Talking to Data Scientists About DevOps</a>.</li>
</ul>
<center>
<p></p><div id="tweet-30966"></div><script>tweet={"url":"https:\/\/twitter.com\/rstatsdc\/status\/1192889086639513600","author_name":"R Conference | Government & Public Sector","author_url":"https:\/\/twitter.com\/rstatsdc","html":"\u003Cblockquote class=\"twitter-tweet\" align=\"center\"\u003E\u003Cp lang=\"qme\" dir=\"ltr\"\u003E❤️ \u003Ca href=\"https:\/\/twitter.com\/RLadiesDC?ref_src=twsrc%5Etfw\"\u003E@RLadiesDC\u003C\/a\u003E\u003Ca href=\"https:\/\/twitter.com\/hashtag\/rstatsdc?src=hash&amp;ref_src=twsrc%5Etfw\"\u003E#rstatsdc\u003C\/a\u003E \u003Ca href=\"https:\/\/t.co\/ujxkEvhe7q\"\u003Epic.twitter.com\/ujxkEvhe7q\u003C\/a\u003E\u003C\/p\u003E&mdash; R Conference | Government &amp; Public Sector (@rstatsdc) \u003Ca href=\"https:\/\/twitter.com\/rstatsdc\/status\/1192889086639513600?ref_src=twsrc%5Etfw\"\u003ENovember 8, 2019\u003C\/a\u003E\u003C\/blockquote\u003E\n\u003Cscript async src=\"https:\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E\n","width":550,"height":null,"type":"rich","cache_age":"3153600000","provider_name":"Twitter","provider_url":"https:\/\/twitter.com","version":"1.0"};document.getElementById("tweet-30966").innerHTML = tweet["html"];</script><p></p>
</center>


</section>

 ]]></description>
  <category>rstats</category>
  <category>conference</category>
  <guid>https://amanda.rbind.io/posts/2019-11-12-dcr/index.html</guid>
  <pubDate>Tue, 12 Nov 2019 00:00:00 GMT</pubDate>
  <media:content url="https://amanda.rbind.io/posts/2019-11-12-dcr/dcr.png" medium="image" type="image/png" height="42" width="144"/>
</item>
<item>
  <title>Shiny App: Twitter Likes</title>
  <dc:creator>Amanda Peterson</dc:creator>
  <link>https://amanda.rbind.io/posts/2019-08-02-twitter-likes/index.html</link>
  <description><![CDATA[ 




<!-- Note: During transition from my old blog to my new blog (and given a hard drive failure causing the loss of my twitter token) I decided to just insert the images from my old blog instead of re-running the code. Thus, code chunks are not evaluated and static images are inserted instead. I may come back to change this in the future.-->
<p>I love that Twitter recently came out with bookmarks! My previous MO on Twitter was to ❤️ posts that contain information that I want to keep for later, most of which are #rstats tweets. I now have 700+ likes, which are time consuming to browse through when I need to find something. I didn’t find an easy way to search likes within Twitter itself, so I built a shiny app to do that using the <a href="https://rtweet.info/index.html"><code>rtweet</code></a> and <a href="https://shiny.rstudio.com/"><code>shiny</code></a> R packages.</p>
<section id="rtweet-package" class="level1">
<h1><code>rtweet</code> Package</h1>
<center>
<p></p><div id="tweet-33219"></div><script>tweet={"url":"https:\/\/twitter.com\/dataandme\/status\/1109764129005420544","author_name":"Mara Averick","author_url":"https:\/\/twitter.com\/dataandme","html":"\u003Cblockquote class=\"twitter-tweet\" align=\"center\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E\uD83D\uDC26 Wanna use twitter data like a pro? (slides &amp; code)\u003Cbr\u003E\uD83D\uDCFD &quot;rtweet workshop: Collecting and analyzing Twitter data&quot; by \u003Ca href=\"https:\/\/twitter.com\/kearneymw?ref_src=twsrc%5Etfw\"\u003E@kearneymw\u003C\/a\u003E \u003Ca href=\"https:\/\/t.co\/d4jdq7EkdN\"\u003Ehttps:\/\/t.co\/d4jdq7EkdN\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/hashtag\/rstats?src=hash&amp;ref_src=twsrc%5Etfw\"\u003E#rstats\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/hashtag\/ddj?src=hash&amp;ref_src=twsrc%5Etfw\"\u003E#ddj\u003C\/a\u003E \u003Ca href=\"https:\/\/t.co\/H3dlolJ6cS\"\u003Epic.twitter.com\/H3dlolJ6cS\u003C\/a\u003E\u003C\/p\u003E&mdash; Mara Averick (@dataandme) \u003Ca href=\"https:\/\/twitter.com\/dataandme\/status\/1109764129005420544?ref_src=twsrc%5Etfw\"\u003EMarch 24, 2019\u003C\/a\u003E\u003C\/blockquote\u003E\n\u003Cscript async src=\"https:\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E\n","width":550,"height":null,"type":"rich","cache_age":"3153600000","provider_name":"Twitter","provider_url":"https:\/\/twitter.com","version":"1.0"};document.getElementById("tweet-33219").innerHTML = tweet["html"];</script><p></p>
</center>
<p>To grab the tweets, there is a little setup with Twitter that is necessary. The setup is described on the <a href="https://rtweet.info/index.html"><code>rtweet</code> website</a>.</p>
<p>During setup, I ran into a bit of an issue authenticating my Twitter app. I’m working in RStudio on an AWS instance (via a Chromebook), which has a known issue. The issue and its work-around are described by the package author <a href="https://github.com/mkearney/rtweet/issues/156">here</a>. After that speed bump was crossed, the <code>rtweet</code> package was extremely easy to use!</p>
</section>
<section id="my-twitter-likes" class="level1">
<h1>My Twitter Likes</h1>
<p>To get a Twitter user’s favorites (aka likes), use the <code>get_favorites</code> function. Below I’m going to grab my most recent five favorites:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">favorites <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_favorites</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DrAmandaRP"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">token =</span> token)</span></code></pre></div>
</div>
<p>The resulting <a href="https://tibble.tidyverse.org/">tibble</a> has 91 columns!</p>
<p>For fun, here is a wordcloud composed of all of my Twitter likes (created using the <a href="https://cran.r-project.org/web/packages/tidytext/index.html"><code>tidytext</code></a> and <a href="https://cran.r-project.org/web/packages/wordcloud2/index.html"><code>wordcloud2</code></a> packages):</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(wordcloud2)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidytext)</span>
<span id="cb2-3">favorites <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_favorites</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DrAmandaRP"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">token =</span> token)</span>
<span id="cb2-4">favorites <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(text) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest_tokens</span>(word, text) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">count</span>(word, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sort =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">anti_join</span>(stop_words) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>word <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"t.co"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"http"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wordcloud2</span>()</span></code></pre></div>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://amanda.rbind.io/posts/2019-08-02-twitter-likes/twitter_wordcloud.png" class="img-fluid figure-img" alt="twitter likes wordcloud"></p>
</figure>
</div>
</section>
<section id="shiny-app-for-searching" class="level1">
<h1>shiny app for searching</h1>
<p>I zeroed in on the following fields: <code>status_id</code>, <code>created_at</code>, <code>text</code>, <code>hashtags</code>, <code>name</code>, <code>screen_name</code>. I put them in a table in a shiny app for easy browsing. Check it out <a href="https://amandarp.shinyapps.io/TwitterLikes/">here</a>! It’s nothing fancy, but I think it’s going to come in handy.</p>
<p>If you’d like to make your own app, my code is available <a href="https://github.com/AmandaRP/TwitterBrowser/blob/master/TwitterBrowser/app.R">on GitHub</a>.</p>
<p>It would also be nice to add functionality to search Twitter bookmarks, but apparently at the time of this post, reading bookmarks isn’t yet available in the Twitter API. I’m keeping an eye on <a href="https://github.com/mkearney/rtweet/issues/344">this <code>rtweet</code> issue</a> for updates.</p>


</section>

 ]]></description>
  <category>rstats</category>
  <category>shiny</category>
  <category>twitter</category>
  <guid>https://amanda.rbind.io/posts/2019-08-02-twitter-likes/index.html</guid>
  <pubDate>Fri, 02 Aug 2019 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Sentiment Analysis of Psalms</title>
  <dc:creator>AmandaRP </dc:creator>
  <link>https://amanda.rbind.io/posts/2019-05-18-text-analysis-of-psalms/index.html</link>
  <description><![CDATA[ 




<!-- Note: During transition from my old blog to my new blog I decided to just insert the images from my old blog instead of re-running the code. Thus, code chunks are not evaluated and static images are inserted instead. I may come back to change this in the future.-->
<p><a href="https://www.biblegateway.com/quicksearch/?quicksearch=psalms&amp;qs_version=GNT">Psalms</a> is a book in both the Christian Bible and the Jewish Tanakh. I thought it would be interesting to look at a sentiment analysis of the book. I chose to work with the “Good News Translation” of the bible as it does not have copyright issues like some of the other translations (per the <a href="https://scripture.api.bible/">American Bible Society</a>). We’ll use the <a href="https://CRAN.R-project.org/package=tidytext">tidytext</a> and <a href="https://CRAN.R-project.org/package=sentimentr">sentimentr</a> R packages to do the analysis. Let’s start by reading data from <a href="https://www.biblegateway.com/">biblegateway.com</a> (using <a href="https://CRAN.R-project.org/package=rvest">rvest</a>) and doing a bit of cleaning:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1">get_chapter <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(chapter){ <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Pull text and do a bit of cleaning:</span></span>
<span id="cb1-2">  </span>
<span id="cb1-3">  url <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://www.biblegateway.com/passage/?search=Psalms+"</span>, </span>
<span id="cb1-4">               chapter, </span>
<span id="cb1-5">               <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&amp;version=GNT"</span>)</span>
<span id="cb1-6">  </span>
<span id="cb1-7">  html <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read_html</span>(url)</span>
<span id="cb1-8">  </span>
<span id="cb1-9">  text <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> html <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-10">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html_node</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".passage-wrap"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-11">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html_text</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_extract</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">(GNT.{1,}"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_replace</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">(GNT</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">)"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-14">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_extract</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">d.{1,}"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-15">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_replace_all</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">d{1,}"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb1-16">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str_replace_all</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">[</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">w{1}</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">]"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb1-17">}</span>
<span id="cb1-18"></span>
<span id="cb1-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Use the function defined above to read all 150 chapters.</span></span>
<span id="cb1-20">chapters <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map_chr</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>, get_chapter) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb1-21">  tibble<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enframe</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ch_num"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text"</span>) </span></code></pre></div>
</div>
<section id="positive-and-negative-word-lexicon" class="level1">
<h1>Positive and Negative Word Lexicon</h1>
<p>Next, we’ll use the <code>tidytext</code> package to tokenize (i.e.&nbsp;split the text by words) and join our data with a dictionary of sentiment words. For more information about text analysis using <code>tidytext</code>, see <a href="https://www.tidytextmining.com/">Text Mining with R: A Tidy Approach</a> by Julia Silge and David Robinson. <code>tidytext</code> comes with sentiment dictionaries, but I’m going to use the Jockers &amp; Rinker sentiment dictionary from the <a href="https://CRAN.R-project.org/package=lexicon">lexicon</a> package to better compare with a follow-on analysis using the <code>sentimentr</code> package. This dictionary contains positive and negative words and an associated sentiment score in the range [-1, 1]. A value of 1 is the most positive, 0 is neutral, and negative 1 is most negative.</p>
<p>Let’s first look at a comparison word cloud to compare the frequency of the positive and negative words in the book.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Tokenize and join with sentiment lexicon:</span></span>
<span id="cb2-2">psalms_sentiment_jockers_rinker <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chapters <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest_tokens</span>(word, text) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#tokenize by words</span></span>
<span id="cb2-4">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#anti_join(stop_words) %&gt;%</span></span>
<span id="cb2-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(lexicon<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>hash_sentiment_jockers_rinker, </span>
<span id="cb2-6">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"word"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x"</span>), </span>
<span id="cb2-7">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">drop =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">replace_na</span>(y, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)) </span>
<span id="cb2-9"></span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Draw the comparison cloud:</span></span>
<span id="cb2-11">psalms_sentiment_jockers_rinker <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(y) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pos =</span> y<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">neg =</span> y<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>ch_num, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>y) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(word, pos, neg) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cnt =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">n</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Positive =</span> cnt <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> pos, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Negative =</span> cnt <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> neg) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-18">  ungroup <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(word, Positive, Negative) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">column_to_rownames</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"word"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">comparison.cloud</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title.colors =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)</span></code></pre></div>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://amanda.rbind.io/posts/2019-05-18-text-analysis-of-psalms/word_cloud.png" class="img-fluid figure-img" alt="sentiment comparison cloud"></p>
</figure>
</div>
</section>
<section id="sentiment-analysis-by-chapter" class="level1">
<h1>Sentiment Analysis by Chapter</h1>
<p>There is some flexibility in the method that we may choose to compute the sentiment. We could <em>sum</em> the sentiment scores for the words in each chapter, which introduces a relationship between sentiment score and chapter length. Or we could compute the <em>average</em> sentiment over the words in the chapter, either choosing to ignore or include neutral words (i.e.&nbsp;words with score of 0). The inclusion of neutral words in the calculation of the average would dampen the overall sentiment score of the chapter. I think the choice depends on what makes the most sense for each application.</p>
<p>In the interest of better comparing this first calculation to a second calculation using the <code>sentimentr</code> package, I’m going use the mean chapter sentiment (including neutral words). That is, the sentiment for the <img src="https://latex.codecogs.com/png.latex?j%5E%7Bth%7D"> chapter is</p>
<p><img src="https://latex.codecogs.com/png.latex?S_j%20=%20%20%5Cfrac%7B1%7D%7Bn_j%7D%20%5Csum_%7Bi=1%7D%5E%7Bn_j%7D%20s_%7Bij%7D"></p>
<p>where <img src="https://latex.codecogs.com/png.latex?n_j"> is the word count for chapter <img src="https://latex.codecogs.com/png.latex?j"> and <img src="https://latex.codecogs.com/png.latex?s_%7Bij%7D"> is the sentiment score for the <img src="https://latex.codecogs.com/png.latex?i%5E%7Bth%7D"> word in the <img src="https://latex.codecogs.com/png.latex?j%5E%7Bth%7D"> chapter.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Compute sentiment:</span></span>
<span id="cb3-2">psalms_sentiment_jockers_rinker <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&lt;&gt;%</span></span>
<span id="cb3-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(ch_num) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb3-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarize</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">avg_sentiment =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(y))</span></code></pre></div>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://amanda.rbind.io/posts/2019-05-18-text-analysis-of-psalms/sentiment.png" class="img-fluid figure-img" alt="sentiment of Psalms"></p>
</figure>
</div>
<p>We see here that <a href="https://www.biblegateway.com/passage/?search=Psalms+150&amp;version=GNT">Chapter 150</a> is the most positive and <a href="https://www.biblegateway.com/passage/?search=Psalms+10&amp;version=GNT">Chapter 10</a> is the most negative. In Chapter 10, the psalmist laments about the wicked and asks God to “hear the desire of the afflicted.” Here is a sample:</p>
<blockquote class="blockquote">
<p>“His mouth is full of lies and threats; trouble and evil are under his tongue. He lies in wait near the villages; from ambush he murders the innocent. His eyes watch in secret for his victims; like a lion in cover he lies in wait.”</p>
</blockquote>
<p>Chapter 150 is a short one of praise to God. Here’s a sample:</p>
<blockquote class="blockquote">
<p>“Praise him with trumpets. Praise him with harps and lyres. Praise him with drums and dancing. Praise him with harps and flutes. Praise him with cymbals. Praise him with loud cymbals. Praise the Lord, all living creatures!”</p>
</blockquote>
<p>Next let’s take another look at the sentiment using the <a href="https://CRAN.R-project.org/package=sentimentr">sentimentr</a> package. It has some nice features such as valence shifters, which are described on the <a href="https://github.com/trinker/sentimentr">package GitHub page</a> as follows:</p>
<blockquote class="blockquote">
<p>“So what are these valence shifters? A negator flips the sign of a polarized word (e.g., ‘I do not like it.’). An amplifier (intensifier) increases the impact of a polarized word (e.g., ‘I really like it.’). A de-amplifier (downtoner) reduces the impact of a polarized word (e.g., ‘I hardly like it.’). An adversative conjunction overrules the previous clause containing a polarized word (e.g., ‘I like it but it’s not worth it.’).”</p>
</blockquote>
<p>The <code>sentimentr</code> GitHub page also discusses the equations used to calculate sentiment. With a bit of work we could apply similar valence shifters with the <code>tidytext</code> package, but it’s nice that it’s automated in <code>sentimentr</code>.</p>
<p>Note that by default this package uses the Jockers &amp; Rinker sentiment dictionary, although it can be swapped out with an alternate.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">psalms_sentiment_w_valence <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> chapters <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-2">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_sentences</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%$%</span></span>
<span id="cb4-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sentiment_by</span>(text, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> ch_num)</span></code></pre></div>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://amanda.rbind.io/posts/2019-05-18-text-analysis-of-psalms/sentiment_valence.png" class="img-fluid figure-img" alt="sentiment of Psalms"></p>
</figure>
</div>
<p>Now, after taking valence shifters into account, <a href="https://www.biblegateway.com/passage/?search=Psalms+67&amp;version=GNT">Chapter 67</a> is the most positive while <a href="https://www.biblegateway.com/passage/?search=Psalms+10&amp;version=GNT">Chapter 10</a> is still the most negative. Chapter 67 is a short chapter (only 7 verses), a song written for the director of music. Here is a sample of verses 3 and 4:</p>
<blockquote class="blockquote">
<p>“May the peoples praise you, God; may all the peoples praise you. May the nations be glad and sing for joy, for you rule the peoples with equity and guide the nations of the earth.”</p>
</blockquote>
<p>Chapter 67 seems to have a similar sentiment as <a href="https://www.biblegateway.com/passage/?search=Psalms+150&amp;version=GNT">Chapter 150</a>, which we identified in the previous analysis.</p>
<p>Additionally, between the two analyses, <a href="https://www.biblegateway.com/passage/?search=Psalms+13&amp;version=GNT">Chapter 13</a> switched from a very slight negative sentiment (-0.0038) to a somewhat positive sentiment (0.1513). This chapter had the largest score change between the two analyses.</p>
<p>Have comments or feedback? Message me on Twitter: <a href="https://twitter.com/DrAmandaRP">DrAmandaRP</a></p>


</section>

 ]]></description>
  <category>rstats</category>
  <category>sentiment analysis</category>
  <category>bible</category>
  <guid>https://amanda.rbind.io/posts/2019-05-18-text-analysis-of-psalms/index.html</guid>
  <pubDate>Sat, 22 Jun 2019 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Introducing the hddtest R package</title>
  <dc:creator>Amanda Peterson</dc:creator>
  <link>https://amanda.rbind.io/posts/2019-05-24-new-r-package-hddtest/index.html</link>
  <description><![CDATA[ 




<p>I’d like to introduce a package that I wrote recently, <code>hddtest</code>, for two sample hypothesis testing of high dimensional discrete data. The package is currently available on <a href="https://github.com/AmandaRP/hddtest">GitHub</a>. It contains methods for both multivariate binary data and multinomial data.</p>
<p>I’ll illustrate the use of one of its functions, the multinomial neighborhood test, by using a dataset included in <code>hddtest</code> called <code>twoNewsGroups</code>. It contains document term frequency matrices for two of the <a href="http://qwone.com/~jason/20Newsgroups/">20 newgroups</a>. Each matrix has dimension 594 by 16214. The <img src="https://latex.codecogs.com/png.latex?(i,j)"> entry of each matrix is the count (term frequency) of the <img src="https://latex.codecogs.com/png.latex?j%5E%7Bth%7D"> word in the <img src="https://latex.codecogs.com/png.latex?i%5E%7Bth%7D"> document. The first matrix in the list contains 594 sampled documents from the <code>rec.sport.baseball</code> newsgroup. The second contains 594 sampled documents from the <code>sci.med</code> newsgroup.</p>
<p>We might like to compare two sets of documents to determine whether or not they come from the same newsgroup. To do this, we’ll perform a neighborhood test.</p>
<p>What is a neighborhood test useful for? In testing the equality of parameters from two populations, it frequently happens that the null hypothesis is rejected even though the estimates of effect sizes are close to each other; however, these differences are so small that parameters may not be considered to be different in practice. Another issue is that although the use of p-values is a common measure to draw a conclusion about the population, one may be interested in the measure of indifference or inhomogeneity.</p>
<p>We’ll start by sampling two sets of 200 documents from the <code>sci.med</code> newsgroup. We’ll use this to simulate the null hypothesis being TRUE.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(hddtest)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(twoNewsGroups)</span>
<span id="cb1-3"></span>
<span id="cb1-4">num_docs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span></span>
<span id="cb1-5">row_ids <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(twoNewsGroups<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>sci.med)</span>
<span id="cb1-6">group_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(row_ids, num_docs)</span>
<span id="cb1-7">group_2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(row_ids[<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>group_1], num_docs)</span></code></pre></div>
</div>
<p>Next for each of the two groups, sum the 200 term frequency vectors together. They will be the two multinomial vectors that we test. We’ll store the result in a list called, <code>vecs2Test</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">vecs2Test <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb2-2">vecs2Test[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> twoNewsGroups<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>sci.med[group_1, ] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb2-5">vecs2Test[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> twoNewsGroups<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>sci.med[group_2, ] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb2-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb2-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
</div>
<p>Now test the null hypothesis that the associated multinomial probability vectors are within some neighborhood, <code>delta</code>, of each other (against the alternative that they are not). We can then use this result to infer whether the sets of documents are likely from the same newsgroup.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">vecs2Test <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">multinom.neighborhood.test</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">delta =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>)</span>
<span id="cb3-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; $statistic</span></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1] 7.811123</span></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; </span></span>
<span id="cb3-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; $pvalue_delta</span></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt;      [,1]</span></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#&gt; [1,]    1</span></span></code></pre></div>
</div>
<p>Here we fail to reject the null hypothesis using a <code>delta</code> of 60. How to choose the appropriate <code>delta</code>? The answer may come from subject matter expertise about the problem domain. Or you can run a simulation to gain insight. Below we define a simulation function.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">simulation <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(data, null_hyp, delta, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">reps =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">num_docs =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>)){</span>
<span id="cb4-2">  </span>
<span id="cb4-3">   vecs2Test <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, reps, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncol</span>(data[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]])), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, reps, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncol</span>(data[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]])))</span>
<span id="cb4-4">   </span>
<span id="cb4-5">   <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>reps){</span>
<span id="cb4-6">     <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>(null_hyp){</span>
<span id="cb4-7">       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sample two sets of num_docs from the SAME set of documents     </span></span>
<span id="cb4-8">       row_ids <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(data[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]])</span>
<span id="cb4-9">       group_1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(row_ids, num_docs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb4-10">       group_2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(row_ids[<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>group_1], num_docs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])</span>
<span id="cb4-11">       vecs2Test[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]][i, ] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]][group_1, ] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>()</span>
<span id="cb4-12">       vecs2Test[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]][i, ] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]][group_2, ] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>()</span>
<span id="cb4-13">       </span>
<span id="cb4-14">     }<span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>{</span>
<span id="cb4-15">       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sample num_docs from each of the two DIFFERENT sets of documents</span></span>
<span id="cb4-16">       vecs2Test[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]][i, ] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]][<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(data[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]), num_docs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]), ] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-17">                                      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>()</span>
<span id="cb4-18">       vecs2Test[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]][i,] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]][<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(data[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]]), num_docs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]), ] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-19">                                      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>()</span>
<span id="cb4-20">     }</span>
<span id="cb4-21">   }</span>
<span id="cb4-22">   </span>
<span id="cb4-23">   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Perform the test:</span></span>
<span id="cb4-24">   result <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> vecs2Test <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">multinom.neighborhood.test</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">delta =</span> delta)</span>
<span id="cb4-25">   </span>
<span id="cb4-26">} <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#end simulation function</span></span></code></pre></div>
</div>
<p>Now run the simulation for varying values of <code>delta</code> (in the range 1 to 160) testing both the null and alternative hypotheses for 30 replications each. For the null hypothesis simulation, we sample documents from the same newsgroup. For the simulation of the alternative hypotheis, we sample documents from the two different newsgroups. The resulting plot shows one curve for each the 60 simulations (which compute the p-value at each value of <code>delta</code>.)</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1">delta <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">160</span></span>
<span id="cb5-2">p.delta.null <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">simulation</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> twoNewsGroups, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">null_hyp =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">delta =</span> delta)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pvalue_delta</span>
<span id="cb5-3">p.delta.alt  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">simulation</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> twoNewsGroups, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">null_hyp =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">delta =</span> delta)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pvalue_delta</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<p><img src="https://amanda.rbind.io/posts/2019-05-24-new-r-package-hddtest/index_files/figure-html/unnamed-chunk-6-1.png" class="img-fluid" width="768"></p>
</div>
</div>
<p>Notice in the plot above that for <code>delta</code> in the range of about 40 to 100, the p-value is large when the the two sets of documents come from the same newsgroup (shown in blue) and small when the two sets of documents come from different newsgroups (shown in red). So, our previous choice of <code>delta</code>=60 seems reasonable for making the correct conclusion.</p>
<p>The methods for this package were developed in collaboration with my UMBC PhD thesis advisor, <a href="http://www.math.umbc.edu/~junpark/">Dr Junyong Park</a>, and published in <a href="https://link.springer.com/article/10.1007%2Fs11749-018-0600-8">1</a> and <a href="https://www.tandfonline.com/doi/abs/10.1080/03610926.2016.1260743">2</a>. Full details about the statistics used and their distributions are documented in these papers. To see the full list of functions available in <code>hddtest</code>, see the <a href="https://github.com/AmandaRP/hddtest">GitHub README</a>. Thanks for reading!</p>



 ]]></description>
  <category>statistics</category>
  <category>rstats</category>
  <guid>https://amanda.rbind.io/posts/2019-05-24-new-r-package-hddtest/index.html</guid>
  <pubDate>Fri, 24 May 2019 00:00:00 GMT</pubDate>
  <media:content url="https://amanda.rbind.io/posts/2019-05-24-new-r-package-hddtest/thumbnail_package.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Statistics Bingo</title>
  <dc:creator>Amanda Peterson</dc:creator>
  <link>https://amanda.rbind.io/posts/2019-03-10-rstats-bingo/index.html</link>
  <description><![CDATA[ 




<p>I just wrapped up another round of teaching stats. I co-teach two courses per year as an adjunct instructor: one class that covers intro stats and the other that hits higher level concepts. Both courses move at a high pace; they’re intended to be a survey course for professionals with a STEM background. Some students have a math background, but have never taken a statistics course. Other students have had statistics a long time ago in their undergraduate studies, but want to brush up on the material.</p>
<p>In both classes, by the time we get to the end, the students appreciate a light hearted activity. I found bingo to be the perfect activity to reveiw material and have a little fun. Jenny Bryan and Dean Attali have an <a href="https://daattali.com/shiny/bingo/">R Shiny app</a> for creating such bingo games. Their site has a handful of pre-populated game themes such as “boring meeting” and “bad data”. Or you can choose to create your own by pasting a list of words.</p>
<p>I created my own bingo questions that I ask during the game and answers that are written on the bingo cards. (Tip: Don’t forget to bring the associated list of questions to class like I did!) I’ve pasted the questions and answers below that I used for each class.</p>
<p>Lastly, don’t forget the sugar! M&amp;M’s make great bingo chips. And, cookies decorated with statistics are a crowd-pleaser.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://amanda.rbind.io/posts/2019-03-10-rstats-bingo/rstats_cookies.jpg" class="img-fluid figure-img" alt="cookies"></p>
</figure>
</div>
<section id="bingo-questions-for-probability-statistics-i" class="level2">
<h2 class="anchored" data-anchor-id="bingo-questions-for-probability-statistics-i">Bingo Questions for Probability &amp; Statistics I</h2>
<table class="table">
<colgroup>
<col style="width: 86%">
<col style="width: 13%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;">Questions</th>
<th>Answers</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">1. The R function used to find the area under the normal curve</td>
<td><code>pnorm</code></td>
</tr>
<tr class="even">
<td style="text-align: left;">2. For a discrete random variable: <img src="https://latex.codecogs.com/png.latex?E(X)%20=%20%5Csum_i%5En%20X_i"> * ____</td>
<td><img src="https://latex.codecogs.com/png.latex?P(X)"></td>
</tr>
<tr class="odd">
<td style="text-align: left;">3. Square root of the variance</td>
<td>standard deviation</td>
</tr>
<tr class="even">
<td style="text-align: left;">4. Mathematical function used to count number of possibilities: without replacement, order doesn’t matter.</td>
<td>choose</td>
</tr>
<tr class="odd">
<td style="text-align: left;">5. To obtain a ___ sample: Divide the population into at least two different sub-populations based on some characteristic of interest. A sample is drawn from each sub-population.</td>
<td>stratified</td>
</tr>
<tr class="even">
<td style="text-align: left;">6. The Central Limit Theorem says that the distribution of the mean converges to this distribution as <img src="https://latex.codecogs.com/png.latex?n"> goes to infinity (variance must be defined).</td>
<td>normal</td>
</tr>
<tr class="odd">
<td style="text-align: left;">7. The ____ distribution approximates the Binomial when <img src="https://latex.codecogs.com/png.latex?n"> is large and <img src="https://latex.codecogs.com/png.latex?p"> is small. In this case we set the parameter <img src="https://latex.codecogs.com/png.latex?%5Clambda=np">.</td>
<td>Poisson</td>
</tr>
<tr class="even">
<td style="text-align: left;">8. <img src="https://latex.codecogs.com/png.latex?P(A%20%5Ccup%20B)%20=%20P(A)%20+%20P(B)%20-"> ___ ?</td>
<td><img src="https://latex.codecogs.com/png.latex?P(A%20%5Ccap%20B)"></td>
</tr>
<tr class="odd">
<td style="text-align: left;">9. Discrete distribution that models the number of successes in <img src="https://latex.codecogs.com/png.latex?n"> Bernoulli trials, where <img src="https://latex.codecogs.com/png.latex?p"> is the probability of success.</td>
<td>Binomial</td>
</tr>
<tr class="even">
<td style="text-align: left;">10. The test statistic in the Test of Independence and The Goodness of Fit has a ___ distribution.</td>
<td>Chi-Square</td>
</tr>
<tr class="odd">
<td style="text-align: left;">11. This distribution has PMF <img src="https://latex.codecogs.com/png.latex?P(X=k)%20=%20p%5Ek(1-p)%5E%7B1-k%7D"></td>
<td>Bernoulli</td>
</tr>
<tr class="even">
<td style="text-align: left;">12. Used to control the type I error of a hypothesis test</td>
<td>significance level (<img src="https://latex.codecogs.com/png.latex?%5Calpha">)</td>
</tr>
<tr class="odd">
<td style="text-align: left;">13. In hypothesis testing, we reject the null hypothesis if the test statistic falls in the ____ region.</td>
<td>critical</td>
</tr>
<tr class="even">
<td style="text-align: left;">14. Bayes Rule: <img src="https://latex.codecogs.com/png.latex?P(A%20%7C%20B)%20="> ____ * <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7BP(A)%7D%7BP(B)%7D"></td>
<td><img src="https://latex.codecogs.com/png.latex?P(B%20%7C%20A)"></td>
</tr>
<tr class="odd">
<td style="text-align: left;">15. The area under the entire PDF curve</td>
<td>1</td>
</tr>
<tr class="even">
<td style="text-align: left;">16. The continuous distribution that looks like a bell curve (except that it has fat tails), converges to normal as <img src="https://latex.codecogs.com/png.latex?n"> increases, and is used when modeling data with small sample size.</td>
<td>Student’s <img src="https://latex.codecogs.com/png.latex?t"></td>
</tr>
<tr class="odd">
<td style="text-align: left;">17. The maximum minus the minimum</td>
<td>range</td>
</tr>
<tr class="even">
<td style="text-align: left;">18. The most frequent observation in a data sample</td>
<td>mode</td>
</tr>
<tr class="odd">
<td style="text-align: left;">19. The function <img src="https://latex.codecogs.com/png.latex?F(X)%20=%20P(X%20%5Cle%20x)">.</td>
<td>CDF</td>
</tr>
<tr class="even">
<td style="text-align: left;">20. A ___ provides a range for which we are <img src="https://latex.codecogs.com/png.latex?(1-%5Calpha)">% confident contains the true value of the population parameter. In class we considered such ranges for the true mean, <img src="https://latex.codecogs.com/png.latex?%5Cmu">, and for proportions.</td>
<td>confidence interval</td>
</tr>
<tr class="odd">
<td style="text-align: left;">21. The ___ error occurs when the null hypothesis is true, but we reject it in favor of the alternative hypothesis.</td>
<td>Type I</td>
</tr>
<tr class="even">
<td style="text-align: left;">22. The ___ of a hypothesis test is the probability that we reject the null hypothesis when it is in fact false.</td>
<td>power</td>
</tr>
<tr class="odd">
<td style="text-align: left;">23. <img src="https://latex.codecogs.com/png.latex?1%20-%20P(A)%20="> the probability of the ___ of <img src="https://latex.codecogs.com/png.latex?A">.</td>
<td>compliment</td>
</tr>
</tbody>
</table>
</section>
<section id="bingo-questions-for-probability-statistics-ii" class="level2">
<h2 class="anchored" data-anchor-id="bingo-questions-for-probability-statistics-ii">Bingo Questions for Probability &amp; Statistics II</h2>
<table class="table">
<colgroup>
<col style="width: 72%">
<col style="width: 27%">
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;">Questions</th>
<th>Answers</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">1. Let {<img src="https://latex.codecogs.com/png.latex?X_i">} for <img src="https://latex.codecogs.com/png.latex?i=1..n"> partition the sample space. Bayes rule says that <img src="https://latex.codecogs.com/png.latex?f(X_i%20%7C%20Y)%20=%20%5Cfrac%7Bf(Y%20%7C%20X_i)f(X_i)%7D%7B%5Csum_%7Bi=1%7D%5E%7Bn%7Df(Y%20%7C%20X_i)f(X_i)%7D">. The ___ law is used in denominator when the marginal, <img src="https://latex.codecogs.com/png.latex?f(Y)">, is unknown.</td>
<td>Law of Total Probability</td>
</tr>
<tr class="even">
<td style="text-align: left;">2. Maximization of the log likelihood function (take derivative and set equal to 0)</td>
<td>MLE</td>
</tr>
<tr class="odd">
<td style="text-align: left;">3. Joint probability density function for two or more variables</td>
<td>Joint PDF</td>
</tr>
<tr class="even">
<td style="text-align: left;">4. Result of integrating <img src="https://latex.codecogs.com/png.latex?f(X,Y)"> with respect to <img src="https://latex.codecogs.com/png.latex?Y">, over the support of <img src="https://latex.codecogs.com/png.latex?Y"></td>
<td>marginal of <img src="https://latex.codecogs.com/png.latex?X"></td>
</tr>
<tr class="odd">
<td style="text-align: left;">5. An alternative to frequentist statistical analysis</td>
<td>Bayesian statistics</td>
</tr>
<tr class="even">
<td style="text-align: left;">6. <img src="https://latex.codecogs.com/png.latex?P(A%20%5Ccap%20B)%20=%20P(A%20%7C%20B)"> * ____</td>
<td><img src="https://latex.codecogs.com/png.latex?P(B)"></td>
</tr>
<tr class="odd">
<td style="text-align: left;">7. Discrete distribution that models number of trials until 1 success</td>
<td>Geometric (special case of negative binomial)</td>
</tr>
<tr class="even">
<td style="text-align: left;">8. Continuous distribution use to model time until events occur</td>
<td>Gamma</td>
</tr>
<tr class="odd">
<td style="text-align: left;">9. True or false: <img src="https://latex.codecogs.com/png.latex?Cov(X,Y)=0"> implies <img src="https://latex.codecogs.com/png.latex?X"> and <img src="https://latex.codecogs.com/png.latex?Y"> are independent.</td>
<td>FALSE<br>
(TRUE if <img src="https://latex.codecogs.com/png.latex?X"> and <img src="https://latex.codecogs.com/png.latex?Y"> are jointly normally distributed. Independence implies <img src="https://latex.codecogs.com/png.latex?cov=0"> ).</td>
</tr>
<tr class="even">
<td style="text-align: left;">10. <img src="https://latex.codecogs.com/png.latex?E(XY)%20=%20E(X)E(Y)"> when X and Y are independent</td>
<td>TRUE</td>
</tr>
<tr class="odd">
<td style="text-align: left;">11. <img src="https://latex.codecogs.com/png.latex?Var(X)%20=%20E(X%5E2)%20-"> ____</td>
<td><img src="https://latex.codecogs.com/png.latex?E(X)%5E2"></td>
</tr>
<tr class="even">
<td style="text-align: left;">12. <img src="https://latex.codecogs.com/png.latex?V(aX+b)%20="> ___</td>
<td><img src="https://latex.codecogs.com/png.latex?a%5E2V(X)"></td>
</tr>
<tr class="odd">
<td style="text-align: left;">13. Name of this function: <img src="https://latex.codecogs.com/png.latex?E(X%5E%7Btx%7D)"><br>
(Note: obtain <img src="https://latex.codecogs.com/png.latex?k%5E%7Bth%7D"> moment by taking <img src="https://latex.codecogs.com/png.latex?k%5E%7Bth%7D"> derivative and evaluating at <img src="https://latex.codecogs.com/png.latex?t">=0)</td>
<td>Moment Generating Function</td>
</tr>
<tr class="even">
<td style="text-align: left;">14. Used in sampling from strata to ensure that the proportion of observations in the sample mimic the population proportions.</td>
<td>Proportional allocation</td>
</tr>
<tr class="odd">
<td style="text-align: left;">15. Used to control the type I error of a hypothesis test</td>
<td>Significance level (<img src="https://latex.codecogs.com/png.latex?%5Calpha">)</td>
</tr>
<tr class="even">
<td style="text-align: left;">16. In Bayesian statistics, the population parameters are considered to be ____.</td>
<td>random variables</td>
</tr>
<tr class="odd">
<td style="text-align: left;">17. <img src="https://latex.codecogs.com/png.latex?P(A%20%7C%20B)%20="> ____ * <img src="https://latex.codecogs.com/png.latex?%5Cfrac%7BP(A)%7D%7BP(B)%7D"></td>
<td><img src="https://latex.codecogs.com/png.latex?P(B%20%7C%20A)"></td>
</tr>
<tr class="even">
<td style="text-align: left;">18. The result of taking the derivative of the CDF with respect to the random variable (for a single random variable)</td>
<td>PDF</td>
</tr>
<tr class="odd">
<td style="text-align: left;">19. The second non-central moment</td>
<td>Variance</td>
</tr>
<tr class="even">
<td style="text-align: left;">20. If <img src="https://latex.codecogs.com/png.latex?E(%5Chat%7B%5Ctheta%7D)%20=%20%5Ctheta"> we say <img src="https://latex.codecogs.com/png.latex?%5Chat%7B%5Ctheta%7D"> is ___.</td>
<td>Unbiased</td>
</tr>
</tbody>
</table>


</section>

 ]]></description>
  <category>statistics</category>
  <category>education</category>
  <guid>https://amanda.rbind.io/posts/2019-03-10-rstats-bingo/index.html</guid>
  <pubDate>Sun, 10 Mar 2019 00:00:00 GMT</pubDate>
  <media:content url="https://amanda.rbind.io/posts/2019-03-10-rstats-bingo/bingo.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>rstudio::conf recap</title>
  <dc:creator>Amanda Peterson</dc:creator>
  <link>https://amanda.rbind.io/posts/2019-01-25-rstudio-conf-2019-recap/index.html</link>
  <description><![CDATA[ 




<p><strong>The overview</strong>: I had the pleasure of attending rstudio::conf 2019 (in Austin, TX), a conference about all things R and RStudio. Over 1700 people attended the main conference, which consisted of three tracks (so my notes below cover only a third of the conference talks). There were an additional two days of tutorials and a two-day hackathon, which I did not attend. The 2020 conference will be in San Francisco Jan 27-30.</p>
<p><strong>My thoughts</strong>: rstudio::conf (and also the yearly UseR! conference) is a great way to stay up to date on the latest and greatest R packages (there are currently 13K+ packages on CRAN) and to meet others excited about #rstats. They also gave the most useful swag that I’ve ever received at a conference: a binder full fo R package cheat sheets! … in addition to hex stickers and t-shirts. A big theme was using R in production; I found the talk about the use of R at T-mobile interesting. Additionally, the talks by Garrett Grolemund and Yihui Xie about rmarkdown/pagedown and the keynote by David Robinson, The Unreasonable Effectiveness of Public Work, motivated me to create this blog site!</p>
<p><strong>Resources</strong>: Recorded videos of all talks are posted <a href="https://resources.rstudio.com/rstudio-conf-2019">here</a>. Additionally, links to slides can be found at <a href="https://github.com/kbroman/RStudioConf2019Slides">here</a>. And, check out the Twitter hashtag, #rstudioconf.</p>
<p><strong>Read more</strong>: Below are my notes from the talks that I attended. The post is a bit long, so I’ve divided it into the sections listed in the right margin.</p>
<section id="viz" class="level2">
<h2 class="anchored" data-anchor-id="viz">Visualization</h2>
<p><strong>3D mapping, plotting, and printing with rayshader</strong>, <em>Tyler Morgan-Wall (Institute for Defense Analysis)</em></p>
<ul>
<li><a href="https://cran.r-project.org/web/packages/rayshader/index.html">Rayshader</a>: building realistic 3D maps from elevation data</li>
<li>Can overlay images onto map. Animations possible. 3-D printing of maps.</li>
<li>Watch the video for lots of cool examples.</li>
<li>Next version will contain 3D ggplots</li>
</ul>
<p><strong>gganimate Live Cookbook</strong>, <em>Thomas Lin Pedersen (Software Engineer, RStudio)</em></p>
<ul>
<li><a href="(https://CRAN.R-project.org/package=gganimate)">gganimate</a> is an implementation of the grammar of animated graphics, extension to ggplot2.</li>
<li>Rewritten completely in the last year.</li>
<li>Now available on CRAN!</li>
<li>How to use:
<ul>
<li>Transitions: you want your data to change (<code>transition_reveal</code>: multiple enter/exit options )</li>
<li>Views: you want your viewpoint to change</li>
<li>Shadows: you want the animation to have memory</li>
</ul></li>
<li>Documentation: https://youtu.be/21ZWDrTukEs</li>
<li>See <a href="https://www.data-imaginist.com/slides/rstudioconf2019/assets/player/keynotedhtmlplayer#0">slides</a> for examples.</li>
</ul>
</section>
<section id="modeling" class="level2">
<h2 class="anchored" data-anchor-id="modeling">Modeling</h2>
<p><strong>Introducing MLflow</strong>, <em>Kevin Kuo (Software Engineer, RStudio)</em></p>
<ul>
<li><a href="https://CRAN.R-project.org/package=mlflow">MLfow</a>: an open source platform for the machine learning lifecycle.</li>
<li>Motivation:
<ul>
<li>Keeping track of what you did (trying different hyper-params, going back to a previous experiment, etc)</li>
<li>Reproducability</li>
<li>Lots of different modeling packages and ways to deploy them.</li>
</ul></li>
</ul>
<p><strong>Solving the model representation problem with broom</strong>, <em>Alex Hayes (Tidyverse Intern, RStudio)</em></p>
<ul>
<li>Model representation problem: Need a standard way to represent models.</li>
<li><a href="https://cran.r-project.org/web/packages/broom/index.html">broom</a> tools:
<ul>
<li><code>tidy()</code>: summarize info about fit components. Broom cleans up fit for us.</li>
<li><code>glance()</code>: report goodness of fit measures</li>
<li><code>augment()</code>: add info about observations to a dataset – not currently defined yet.</li>
</ul></li>
<li>Print really pretty table of fit desc: <code>tidy(fit) %&gt;% kable2()</code><br>
</li>
<li>Compare different models using <code>purrr</code>. (See code on slides)</li>
<li>Real power: working with multiple models at once.</li>
<li>Resource: <a href="https://broom.tidyverse.org">broom.tidyverse.org</a></li>
<li>See <a href="https://buff.ly/2FGKFkj">slides</a>!!!</li>
</ul>
<p><strong>Parsnip - a tidy model interface (building models)</strong>, <em>Max Kuhn (Engineer, RStudio)</em></p>
<ul>
<li>Why <a href="(https://cran.r-project.org/web/packages/parsnip/index.html)">parsnip</a> name? White carrot (a play on <code>caret</code>)</li>
<li>Motivation for <code>parsnip</code>:
<ul>
<li>Different packages have different modeling interfaces.</li>
<li>Functions run <code>na.omit</code> silently. Delete data.</li>
</ul></li>
<li><code>parsnip</code> has a tidy interface</li>
<li>Similar to <code>broom</code>, nicely prints output.</li>
<li>Ex: <code>set_engine(“glmnet”)</code> , however, engine doesn’t necessarily have to be an R engine.</li>
<li>Next steps:
<ul>
<li>Add more models and classes of models</li>
<li>Formalize the API and tools for others to add parsnip models to their packages</li>
</ul></li>
</ul>
<p><strong>Why Tensorflow Eager Execution matters</strong>, <em>Sigrid Keydana</em></p>
<ul>
<li>Typically a static graph is generated. New way: eager execution</li>
<li>See <a href="https://blogs.rstudio.com/tensorflow/">blog articles</a>.</li>
</ul>
</section>
<section id="other" class="level2">
<h2 class="anchored" data-anchor-id="other">Other R Packages</h2>
<p><strong>Melt the clock: tidy time series analysis</strong>, <em>Earo Wang (PhD student, Monash University)</em></p>
<ul>
<li>Packages:
<ul>
<li><a href="https://cran.r-project.org/web/packages/tsibble/index.html">tsibble</a>: to tidy and transform ts data</li>
<li><a href="https://cran.r-project.org/web/packages/mable/index.html">mable</a>: table of models</li>
<li><code>fable</code>: tidy forecasting (table of forecasts)</li>
</ul></li>
<li>Can use familiar broom functions on a <code>mable</code>: <code>tidy</code>, <code>glance</code>, <code>augment</code>. Then use <code>geom_forecast</code> (<code>ggplot</code>) to visualize.</li>
</ul>
<p><strong>Working with categorical data in R without losing your mind</strong>, <em>Amelia McNamara (Assistant professor, University of St Thomas)</em></p>
<ul>
<li>“Practical Data Science for Statistics”: collection of papers. Avail on Github.</li>
<li>In R, categorical data is represented as factors.</li>
<li>Factors are nice for 1) modeling, 2) reordering items in <code>ggplot</code>.</li>
<li>Paper: Wrangling categorical data in R. Shows how factors behave unexpectedly.</li>
<li>Use <code>read_csv</code> instead of <code>read.csv</code>! Better options for data formats.</li>
<li><a href="https://cran.r-project.org/web/packages/forcats/index.html">forcats</a>: package to easily work with factors. Solves many of the issues that base R has with factors.<br>
</li>
<li>See her cheat sheet on <a href="https://www.rstudio.com/resources/cheatsheets/">RStudio website</a>: syntax comparison.</li>
<li><code>summary()</code> is your friend (along with <code>testthat</code>) to make sure data isn’t changing unexpectedly.</li>
</ul>
<p><strong>Building an A/B testing analytics system with R and Shiny</strong>, <em>Emily Robinson (Data Scientist, DataCamp)</em></p>
<ul>
<li><a href="(https://github.com/datacamp/funneljoin)">funneljoin</a> - R package for common A/B testing analyses.</li>
</ul>
</section>
<section id="doc" class="level2">
<h2 class="anchored" data-anchor-id="doc">Documentation</h2>
<p><strong>R Markdown: The Bigger Picture</strong>, <em>Garrett Grolemund (Data scientist and Educator, RStudio)</em></p>
<ul>
<li>Co-other of <a href="https://bookdown.org/yihui/rmarkdown/">R Markdown the Definitive Guide</a></li>
<li>Replication crisis example: Estimate: 75%-90% of preclinical results cannot be reproduced, which costs $28 billion per year in the US.</li>
<li>Rmarkdown provides a map for other scientists to reproduce your results.</li>
</ul>
<p><strong>Pagedown: Creating Beautiful PDFs with R Markdown</strong>, <em>Yihui Xie (Software Engineer, RStudio) – collaborator: Romain Lesur</em></p>
<ul>
<li>Status: package is still experimental (obtain from github)</li>
<li><a href="https://github.com/rstudio/pagedown">pagedeown</a> creates paged documents (e.g.&nbsp;PDF) from web pages.</li>
<li>Chrome or chromium is recommended browser to view.</li>
<li>Can also use to create:
<ul>
<li>business cards.</li>
<li>Resume (e.g.&nbsp;https://pagedown.rbind.io/html-resume)</li>
<li>Posters</li>
<li>Letters</li>
<li>Books</li>
</ul></li>
<li>Slides: http://bit.ly/pagedown</li>
</ul>
<p><strong>Introducing the the gt Package</strong>, <em>Rich Iannone (Software Engineer, RStudio)</em> <span class="citation" data-cites="riannone">@riannone</span></p>
<ul>
<li><a href="https://github.com/rstudio/gt">gt</a> lets you build pretty display tables with easy-to-use functions for HTML, LaTeX and RTF.</li>
<li>Currently on Github (not yet on CRAN)</li>
<li><code>tibble %&gt;% gt()</code> or <code>dataframe %&gt;% gt()</code></li>
<li>See <a href="https://github.com/rich-iannone/presentations">slides</a> for an example of sending an email (with a table) from RStudio.</li>
</ul>
</section>
<section id="programming" class="level2">
<h2 class="anchored" data-anchor-id="programming">General Programming</h2>
<p><strong>Democratizing R with Plumber APIs</strong>, <em>James Blair (Solutions Engineers, RStudio)</em></p>
<ul>
<li><a href="https://cran.r-project.org/web/packages/plumber/index.html">plumber</a>: Easily create API endpoints around R functions.</li>
<li>Interacts with OPENAPI (Swagger)</li>
<li>Use case: Use <code>plumber</code> to expose R models via an API</li>
<li>Most recent updates avail in github repo</li>
<li>Resources:
<ul>
<li>Plumber: <a href="https://www.rplumber.io/">www.rplumber.io</a></li>
<li>openAPI: https://swagger.io/docs/specification/about</li>
<li>Github: <a href="https://github.com/sol-eng/plumber-model">github.com/sol-eng/plumber-model</a></li>
</ul></li>
</ul>
<p><strong>Vctrs: tools for making size and type consistent functions</strong>, <em>Hadley Wickham (Chief Scientist, RStudio)</em> <span class="citation" data-cites="hadleywickham">@hadleywickham</span></p>
<ul>
<li><a href="https://cran.r-project.org/web/packages/vctrs/index.html">vctrs</a>: a new package that provides tools to ensure that functions behave consistently with respect to inputs of varying length and type.</li>
<li>Base R: When combining objects of different classes using <code>c()</code>, the following order of precidence occurs: Logical -&gt; integer -&gt; double -&gt; character (combine 2 types in an atomic vector and you get the type on the right)</li>
<li><code>vctrs</code> is more strict than an atomic vector in base R.</li>
<li>Will be integrated into <code>tidyverse</code> packages (behind the scenes) during 2019.</li>
</ul>
<p><strong>Tidy eval context</strong>, <em>Jenny Bryan (Software Engineer, RStudio)</em></p>
<ul>
<li>Tidy evaluation is a toolkit for metaprogramming (code that writes/mutates code) in R.</li>
<li>Tidyverse itself does alot of metaprogramming (behind the scenes).</li>
<li>Similar to nonstandard evaluation or unquoted variable names.</li>
<li>Package: <code>rlang</code> (<a href="https://rlang.r-lib.org/">rlang.r-lib.org</a>) is a developer facing package. Most people will not need to use.</li>
<li>Might need <code>enquo</code> or <code>!!</code> if passing variables to tidyverse function.</li>
<li>My perspective: This is more in the low level weeds than I need.</li>
</ul>
<p><strong>Box plots: a case study in debugging and perseverance</strong>, <em>Kara Woo (Research Scientist, Sage Bionetworks)</em></p>
<ul>
<li>Talked through an example of a difficult debugging problem (for the <code>ggplot2</code> package). * Advice:
<ul>
<li>Use a <a href="https://cran.r-project.org/web/packages/reprex/index.html">reprex</a> (minimal reproducible example) to determine/reproduce problem.</li>
<li>Use <code>debug</code> function. (Let’s you step through function.)</li>
</ul></li>
<li>How do you know when you are done? Don’t let perfect be the enemy of good.</li>
</ul>
</section>
<section id="interop" class="level2">
<h2 class="anchored" data-anchor-id="interop">Interoperability with other languages</h2>
<p><strong>Scaling R with Spark</strong>, <em>Javier Luraschi (Software Engineer, RStudio)</em></p>
<ul>
<li><a href="https://cran.r-project.org/web/packages/sparklyr/index.html">sparklyr</a> package avail on cran (also need spark on machine)</li>
<li>Connecting to Spark: “Connections” pain in the upper right tab. -&gt; new connection -&gt; spark. Click the “Connect from” dropdown to see interaction options (e.g.: command line, R notebook)</li>
<li>To start: <code>sc &lt;- spark_connect(master=”local”)</code></li>
<li>Can use <code>dplyr</code> or sql code for data manipulation/query</li>
<li>New features:
<ul>
<li>Introduced pipelines. Can export to be used by ppl working in other languages.</li>
<li>Spark structured streams: process streaming data with R dataframes. Apply usual dplyr transformations.</li>
</ul></li>
<li>Currently working on:
<ul>
<li>Support for Apache arrow. Install R arrow package from github.</li>
<li>Xgboost models in spark</li>
</ul></li>
<li>Resources:
<ul>
<li>Docs: <a href="https://spark.rstudio.com/">spark.rstudio.com</a></li>
<li>Blog: <a href="https://blog.rstudio.com/tags/sparklyr">blog.rstudio.com/tags/sparklyr</a></li>
<li>Stackoverflow: <a href="https://stackoverflow.com/tags/skparklyr">stackoverflow.com/tags/skparklyr</a></li>
</ul></li>
</ul>
<p><strong>Ursa Labs and Apache Arrow in 2019: Infrastructure for next-gen data science toolbox</strong>, <em>Wes McKinney (Ursa Labs, Python Pandas Creator)</em></p>
<ul>
<li>https://ursalabs.org</li>
<li>R and Python programmers solving many of the same problems.</li>
<li>Vision: multicore algorithms, lazy eval, sophisticated memory management, interoperable memory models, interchangeable between languages.</li>
<li>Arrow: founded in 2016. Language agnostic, open standard in-memory format for data frames. Tools (languages) share arrow memory. Goals: faster access to data, move data efficiently, compute analytics fast.</li>
<li>Arrow for R: Building bindings for R.</li>
<li>Plans to improve the <a href="https://cran.r-project.org/web/packages/feather/index.html">feather</a> package. The feather file format is readable by both R and Python.</li>
</ul>
</section>
<section id="production" class="level2">
<h2 class="anchored" data-anchor-id="production">R in Production</h2>
<p><strong>API Development with R and Tensorflow at T-Mobile</strong>, <em>Heather Nolis &amp; Jacqueline Nolis (Machine Learning Engineer &amp; Data Scientist, nolisllc)</em> {#tmobile}</p>
<ul>
<li>T-mobile has 70 million customers (+ additional from merger with Sprint)</li>
<li>NLP models to classify incoming customer message (including account info) to give live agent a heads up about the likely topic. (They used a CNN via the keras R package.)</li>
<li>Their workflow steps: First Rmarkdown for exploratory data analysis. Second show model to business people using a shiny demo to get them interested. Success: Given millions of $ to put it into production.</li>
<li>Was told: “If you want to do ML in production, you have to use Python.” Idea: Treat R like a real programming language (because it is one)! Didn’t want to re-write everything. Steps:
<ul>
<li>Turn R into an API using plumber</li>
<li>Use docker images (rocker)</li>
<li>Plumber doesn’t support https. Used an appache2 server to reroute.</li>
<li>Container was too big. Swapped miniconda for anaconda. Removed RStudio &amp; some unnecessary Linux, R, and python packages.</li>
</ul></li>
<li>This model is now deployed and used in production at T-mobile.</li>
<li>Their docker container is now open source: https://github.com/tmobile/r-tensorflow-api</li>
<li>Slides: nollisllc.com/rstudio19</li>
</ul>
<p><strong>Keynote: Tareef Kawaf (President, RStudio)</strong>,</p>
<ul>
<li>RStudio maintains 170 R packages</li>
<li>Making the life of an SA better: RStudio Server Pro, RStudio package manager.</li>
<li>Rstudio connect to publish Shiny applications, R Markdown reports, Plumber APIs, dashboards, plots, and more.</li>
</ul>
<p><strong>Keynote: Shiny in Production</strong>, <em>Joe Cheng (CTO of RStudio)</em></p>
<ul>
<li><a href="https://cloud.r-project.org/">Cloud.r-project.org</a>: cran mirror managed by RStudio. Download logs available (for that mirror).</li>
<li>Q: Can <a href="https://cran.r-project.org/web/packages/shiny/index.html">shiny</a> be used for production. Ans: Yes! (It’s quite easy.) Challenges: Cultural (shiny apps usually developed by R users, who aren’t necessarily SWEs). Organizational (IT and management can be skeptical). Technical (shiny lowers bar for creating web app… but not easy to automated testing, load testing, profiling, and deployment … but RStudio has worked on making this better).</li>
<li>Pet peeve: “R is not a real programming language.”</li>
<li>New tools for shiny in production:
<ul>
<li>RStudio Connect - Shiny serving with push-button deployment</li>
<li><a href="https://cran.r-project.org/web/packages/shinytest/index.html">Shinytest</a> (now on cran) - automated ui testing for shiny</li>
<li>Shinyloadtest - load testing for shiny</li>
<li><a href="https://cran.r-project.org/web/packages/profvis/index.html">profvis</a> - profiler for R</li>
<li>Plot caching - in Shiny 1.2. Speed up plots. Use if plots are 1) slow, 2) significant fraction of total amt of time the app spending thinking, 3) most users likely to request the same few plots.</li>
<li>Async - last resort for slow portions.</li>
</ul></li>
<li>Use shinyloadtest to see if it’s fast enough (generates large amounts of traffic). If not, use profvis to see what’s making it slow. Then optimize: move work out of shiny (very often). Make code faster (very often), using caching (sometimes), use async (occasionally). Repeat.</li>
<li>Deploy apps to either RStudioConnect or Shiny Server.</li>
<li>Reading from feather files is faster than csv.</li>
<li>Resources:
<ul>
<li>Book: <a href="http://bit.ly/shiny-prod-book">Shiny in Production</a> (in progress)</li>
<li><a href="https://speakerdeck.com/jcheng5/shiny-in-production">Slide deck</a></li>
</ul></li>
</ul>
<p><strong>R in Production</strong> <em>Mark Sellers (Data Engineer, Mango Solutions)</em></p>
<ul>
<li>Authored: <a href="https://fg2re.sellorm.com/">Field Guide to the R Ecosystem</a></li>
<li>Biggest challenge to using R in production: cultural, not technical.</li>
</ul>
</section>
<section id="rstudio" class="level2">
<h2 class="anchored" data-anchor-id="rstudio">RStudio Updates</h2>
<p><strong>New Language Features in RStudio 1.2</strong>, <em>Jonathan McPherson (Engineer, RStudio)</em></p>
<ul>
<li>Goals: more comprehensive R project workbench. Embrace other languages commonly used in R data science projects, reduce context switching.</li>
<li>Non-goals: Become a general purpose IDE. Lose focus on R.</li>
<li>Demo-ed the following languages within one R notebook.
<ul>
<li>SQL: Connections tab -&gt; new connection -&gt; ODBC. Write SQL in RStudio (as a code chunk in R notebook, or in a SQL file).</li>
<li>Python: <a href="https://cran.r-project.org/web/packages/reticulate/index.html">reticulate</a> package</li>
<li>D3: <code>r2d4</code> function</li>
</ul></li>
<li>Background scripts: “source as local job” button to run job in the background. Can do other things in RStudio while it’s running. Multiple jobs can be run at once. Useful for long running computations.</li>
<li>Make powerpoint presentation with RMarkdown: New file -&gt; presentation -&gt; PowerPoint</li>
<li>Stable release of 1.2 this spring.</li>
</ul>
</section>
<section id="education" class="level2">
<h2 class="anchored" data-anchor-id="education">Education</h2>
<p><strong>R4DS online learning community</strong>, <em>Jesse Mostipak (Data Scientist, Teaching Trust)</em></p>
<ul>
<li>Started the R for Data Science (R4DS) slack group.</li>
<li>Rules: You will be kicked out of the group for being not-nice.</li>
<li><a href="https://www.rfordatasci.com/">www.Rfordatasci.com</a></li>
<li><span class="citation" data-cites="R4DScommunity">@R4DScommunity</span></li>
<li><a href="https://thomasmock.netlify.com/post/tidytuesday-a-weekly-social-data-project-in-r/">TidyTuesday</a></li>
</ul>
<p><strong>Keynote: Explicit Direct Instruction in Programming Education</strong>, <em>Felienne (Associate Prof, Leiden University)</em> <span class="citation" data-cites="felienne">@felienne</span></p>
<ul>
<li>Topic: How to teach programming?</li>
<li>Examples of direct instruction:
<ul>
<li>Vocalize code snippets (when teaching kids)</li>
<li>Explanation and practice works best (as opposed to explore). Skill -&gt; motivation.</li>
</ul></li>
<li>Interesting &amp; entertaining talk for people interested in the teaching of coding.</li>
</ul>
<p><strong>The next million R users</strong> <em>Carl Howe (Director of Education, RStudio)</em></p>
<ul>
<li>Survey: See <a href="https://github.com/rstudio/learning-r-survey">rstd.io/learning-r-survey</a>. 3300 responses. (warning: sampling bias may be present)</li>
<li>Who uses R? 110 countries responded.</li>
<li>Most have advanced degrees.</li>
<li>⅔ of R users use tidyverse today.</li>
<li>15% of R users have no one else in their work group that knows R :(</li>
<li>Resources:
<ul>
<li>RStudio teacher certification available.</li>
<li>Free academic licensing for RStudio pro tools. Just send course syllabus from a certified academic institution. Research (instead of teaching) gets a 50% discount.</li>
<li>Data Science in a box: https://datasciencebox.org</li>
<li>Lots of free online books: R for Data Science, Advanced R, Blogdown, Hands on programming with R, Geocomputation in R.</li>
<li><a href="https://rstudio.cloud/">rstudio.cloud</a> (free) primers for self learning.</li>
</ul></li>
</ul>
<p><strong>Introductory Statistics with R: Easing the transition to software for beginning students</strong>, <em>Kelly Nicole Bodwin (Faculty, Cal Poly)</em> <span class="citation" data-cites="kellybodwin">@kellybodwin</span></p>
<ul>
<li>They use pre-lab exercises built in Shiny to let the students practice the statistics before having to code in R. Demo of a pre-lab exercise shown in talk.</li>
<li><a href="https://cran.r-project.org/web/packages/learnr/index.html">learnr</a> package was used to build shiny apps.</li>
<li>Github repo with exercises: <a href="https://github.com/kbodwin/Introductory-Statistics-Labs">github.com/kbodwin/Introductory-Statistics-Labs</a></li>
<li>Demos:
<ul>
<li>https://kbodwin.shinyapps.io/Lab_Exercise_CatVars2</li>
<li>https://kbodwin.shinyapps.io/Lab_Exercise_tDist</li>
<li>https://kbodwin.shinyapps.io/t_tests2</li>
</ul></li>
</ul>
<p><strong>Teaching data science with puzzles</strong>, <em>Irene Steves (former intern, RStudio)</em> <span class="citation" data-cites="isteves">@isteves</span></p>
<ul>
<li>Puzzle name: Tidies of March</li>
<li>R package: <code>tidiesofmarch</code></li>
<li>Slides and code available at: <a href="https://github.com/isteves/ds-puzzles">bit.ly/ds-puzzles</a></li>
</ul>
<p><strong>Catching the R wave how R and RStudio are revolutionizing statistics education in community colleges (and beyond)</strong>, <em>Mary Rudis (Math Dept Chair, Great Bay Community College)</em></p>
<ul>
<li>Shiny apps for teaching stats:
<ul>
<li>https://statistics.calpoly.edu/shiny</li>
<li>https://shinyapps.science.psu.edu</li>
</ul></li>
<li>Github: <a href="https://github.com/mrshrbrmstr/RStudioConf2019">github.com/mrshrbrmstr/RStudioConf2019</a> (includes lesson plans)</li>
</ul>
</section>
<section id="ds" class="level2">
<h2 class="anchored" data-anchor-id="ds">Data Science</h2>
<p><strong>Using Data Effectively: Beyond Art and Science</strong>, <em>Hilary Parker (Data Scientist, Stitch Fix)</em></p>
<ul>
<li>Stitch Fix has very little data on both the person and the clothing item… traditional matrix factorization (collaborative filtering) does not work well. Soln: They added the “style shuffle” where customer flips through a bunch of clothes and says yes/no to whether they would wear it. This enabled traditional matrix factorization.</li>
<li>R <code>magik</code> package for image processing.</li>
</ul>
<p><strong>Data Science as a Team Sport</strong>, <em>Angela Bassa (Director of Data Science, iRobot)</em> <span class="citation" data-cites="angebassa">@angebassa</span></p>
<ul>
<li>Just because a data scientist can do everything, doesn’t mean they should.</li>
<li>Data engineer != data scientist</li>
<li>When to grow? When you’d like to grow scope &amp; maturity. Adding people will slow things down (additional complexity) unless systems are improved.</li>
<li>When adding people: add specialization (people have different roles in the DS pipeline), add process (documentation, authentication, governance, data provenance, automation: testing, deployment), add resilience (hiring, methodical on-boarding, culture, diversity &amp; inclusion)</li>
<li>Idea: Documentation party … offsite … have pizza.</li>
<li>Hire both experts and interns (the latter question what experts have forgotten to question)</li>
<li>Where should DS team live? Embedded or centralized? Her answer: It doesn’t matter. The importance is how they interact and communicate. But, remember teams don’t scale.</li>
<li>In her experience the best model she’s found is 5-10 data scientists (of differing background/expertise) + ~3 data engineers on a team. If more then split into multiple teams.</li>
</ul>
<p><strong>Keynote: The Unreasonable Effectiveness of Public Work</strong>, <em>David Robinson (Chief Data Scientist, Data Camp)</em> {#dr}</p>
<ul>
<li>Work shared publically is way more useful than work local on your computer.</li>
<li>Effective ways to share: blog, tweet, contribute to open source, give talks, record screencasts, write a book.</li>
<li>When you’ve given the same in-person advice 3 times, write a blog post.</li>
<li>If you start a data-related blog, tweet link to <span class="citation" data-cites="drob">@drob</span> and he’ll tweet about your first post.</li>
<li>What to blog about?
<ul>
<li>Any paper you’re written. (more exposure)</li>
<li>Current events</li>
<li>TidyTuesday</li>
<li>Teach a concept</li>
<li>Blog about something that you’re learning.</li>
<li>Examples: #datablog hashtag on Twitter</li>
</ul></li>
<li>Twitter:
<ul>
<li>One for each blog post.</li>
<li>Promote others’ work</li>
<li>Tidytuesday evaluation.</li>
<li>What you’ve learned at a conference</li>
<li>Not a great way to document knowledge for long term. Blog better for that.</li>
<li>From:username to search within one person’s tweets.</li>
</ul></li>
<li>Contribute to open source:
<ul>
<li>See <a href="https://thisisnic.github.io/2018/11/28/ten-steps-to-becoming-a-tidyverse-contributor/">Ten Steps to Becoming a Tidyverse Contributor by Nic Crane</a></li>
<li>Contribute to a beginner-friendly issue</li>
<li>Write R packages (See <a href="http://r-pkgs.had.co.nz/">R Packages</a> book)</li>
</ul></li>
<li>Give talks:
<ul>
<li>See <a href="https://hookedondata.org/giving-your-first-data-science-talk/">Giving your first data science talk</a> by Emily Robinson</li>
<li>Introvert tip: It makes networking at conferences easier.</li>
<li>Be sure to publish your slides.</li>
</ul></li>
<li>Record screencasts:
<ul>
<li>Limitation: you need to be capable and confident enough to improvise.</li>
<li>Rachel Tatman does live coding on Twitch.</li>
</ul></li>
<li>Write a book:
<ul>
<li>You need a good amount to say and some practice saying it.</li>
<li>R <a href="https://cran.r-project.org/web/packages/bookdown/index.html">bookdown</a> package.</li>
</ul></li>
<li>Slides: <a href="https://www.dropbox.com/s/jk7216yr30ztpdp/DavidRobinson-RStudio-2019-old.pdf?dl=0">bit.ly/drob-rstudio-2019</a></li>
</ul>
<p><strong>Panel Discussion: Growth and Data Science: Individuals, leaders, organizations and responsibilities</strong>, <em>Speakers: Hilary Parker (Data Scientist, Stitch Fix), Karthik Ram (Data Science Fellow, UC Berkeley), Angela Bassa (Director of Data Science, iRobot), Tracy Teal (Exec Dir, Carpentries), Eduardo (Data Science Leader, Instagram)</em></p>
<ul>
<li>See Hilary’s <a href="http://nssdeviations.com/">Not so standard data science</a> podcast</li>
<li>What is the most important thing for success as a data scientist:
<ul>
<li>Flexibility in tooling (no space for a tooling purist)… but know at least one language fluently. Softer skills (e.g.&nbsp;empathy, understanding user/reader)</li>
<li>If an organization is giving you a hard time about your lack of knowledge as a junior data scientist, consider a different company. Don’t shy away from saying “I don’t know.” Her interview guide has impossible questions to answer… she’s looking for humility to say “I don’t know.”</li>
</ul></li>
<li>How to choose to become a DS lead vs staying technical:
<ul>
<li>Data scientists aren’t necessarily given opportunity to learn/grow leadership skills. Need to be more strategic to grow better leaders. Some DS’s stumble into a management/leadership position.</li>
<li>Angela didn’t want to become a manager and wanted to stay in trenches at first, but now loves it (took the position b/c didn’t want to let her management down).. “Management is a skill that is learnable.” If you feel accomplishment from management, great rock it. If you don’t, then no worries don’t be a manger.</li>
<li>It takes personal growth to stop self-depricating yourself as a manager: “I just read email and schedule meetings.”</li>
<li>Fear: Skills will atrophy. Remember “loops are still loops.” Opportunity to develop additional skills. Redefine what success means: How can I enable people to do their best work?</li>
</ul></li>
<li>In a growing organization that you’ve been at, what is the most important lesson to do/not do?
<ul>
<li>Don’t hire DS if you don’t have data.</li>
<li>Adapt as the business grows.</li>
<li>Invest in systems that let people work effectively together</li>
<li>Don’t over hire. No clear success criteria.</li>
<li>For machine learning projects, useful to have a PM that understand machine learning. There types of people can be rare.</li>
</ul></li>
<li>Responsibilities as Data scientists:
<ul>
<li>Data are artifacts…not ground truth.</li>
<li>Own your mistakes.</li>
<li>Make work reproducible.</li>
<li>See <a href="http://www.datasciencemanifesto.org/">datasciencemanifesto.org</a></li>
</ul></li>
<li>What is the most effective way that program management and DS works together:
<ul>
<li>Product has a road map. Make sure that DS also has a road map and that they are correlated.</li>
</ul></li>
<li>What are common ways that data scientists fail?
<ul>
<li>By not saying “no” enough then only providing a cursery analysis that has little impact.</li>
<li>Assuming the PM knows enough to ask the question in the best way.</li>
<li>Caring more about the stats method/model than solving the problem for the business.</li>
</ul></li>
</ul>


</section>

 ]]></description>
  <category>rstats</category>
  <category>conference</category>
  <guid>https://amanda.rbind.io/posts/2019-01-25-rstudio-conf-2019-recap/index.html</guid>
  <pubDate>Sat, 26 Jan 2019 00:00:00 GMT</pubDate>
  <media:content url="https://amanda.rbind.io/posts/2019-01-25-rstudio-conf-2019-recap/rstudio_conf_2019.png" medium="image" type="image/png" height="55" width="144"/>
</item>
</channel>
</rss>
