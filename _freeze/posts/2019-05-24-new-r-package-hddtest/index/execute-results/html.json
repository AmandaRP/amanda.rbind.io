{
  "hash": "895f73a93564c126e34d9167456cefc7",
  "result": {
    "markdown": "---\ntitle: 'Introducing the hddtest R package'\nauthor: Amanda Peterson\ndate: '2019-05-24'\ncategories: [\"statistics\",\"rstats\"]\ndescription: \"An R package for two sample hypothesis testing of high dimensional discrete data\"\ndraft: false\nimage: thumbnail_package.jpg\ncode-copy: true\n---\n\n\n\n\nI'd like to introduce a package that I wrote recently, `hddtest`, for two sample hypothesis testing of high dimensional discrete data. The package is currently available on [GitHub](https://github.com/AmandaRP/hddtest). It contains methods for both multivariate binary data and multinomial data.\n\nI'll illustrate the use of one of its functions, the multinomial neighborhood test, by using a dataset included in `hddtest` called `twoNewsGroups`. It contains document term frequency matrices for two of the [20 newgroups](http://qwone.com/~jason/20Newsgroups/). Each matrix has dimension 594 by 16214. The $(i,j)$ entry of each matrix is the count (term frequency) of the $j^{th}$ word in the $i^{th}$ document. The first matrix in the list contains 594 sampled documents from the `rec.sport.baseball` newsgroup. The second contains 594 sampled documents from the `sci.med` newsgroup.\n\nWe might like to compare two sets of documents to determine whether or not they come from the same newsgroup. To do this, we'll perform a neighborhood test.\n\nWhat is a neighborhood test useful for? In testing the equality of parameters from two populations, it frequently happens that the null hypothesis is rejected even though the estimates of effect sizes are close to each other; however, these differences are so small that parameters may not be considered to be different in practice. Another issue is that although the use of p-values is a common measure to draw a conclusion about the population, one may be interested in the measure of indifference or inhomogeneity.\n\nWe'll start by sampling two sets of 200 documents from the `sci.med` newsgroup. We'll use this to simulate the null hypothesis being TRUE.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(hddtest)\ndata(twoNewsGroups)\n\nnum_docs <- 200\nrow_ids <- 1:nrow(twoNewsGroups$sci.med)\ngroup_1 <- sample(row_ids, num_docs)\ngroup_2 <- sample(row_ids[-group_1], num_docs)\n```\n:::\n\n\nNext for each of the two groups, sum the 200 term frequency vectors together. They will be the two multinomial vectors that we test. We'll store the result in a list called, `vecs2Test`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvecs2Test <- list(NA, 2)\nvecs2Test[[1]] <- twoNewsGroups$sci.med[group_1, ] %>% \n  colSums() %>% \n  matrix(nrow = 1)\nvecs2Test[[2]] <- twoNewsGroups$sci.med[group_2, ] %>%\n  colSums() %>% \n  matrix(nrow = 1)\n```\n:::\n\n\nNow test the null hypothesis that the associated multinomial probability vectors are within some neighborhood, `delta`, of each other (against the alternative that they are not). We can then use this result to infer whether the sets of documents are likely from the same newsgroup.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvecs2Test %>% multinom.neighborhood.test(delta = 60)\n#> $statistic\n#> [1] 7.811123\n#> \n#> $pvalue_delta\n#>      [,1]\n#> [1,]    1\n```\n:::\n\n\nHere we fail to reject the null hypothesis using a `delta` of 60. How to choose the appropriate `delta`? The answer may come from subject matter expertise about the problem domain. Or you can run a simulation to gain insight. Below we define a simulation function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsimulation <- function(data, null_hyp, delta, reps = 30, num_docs = c(200, 200)){\n  \n   vecs2Test <- list(matrix(NA, reps, ncol(data[[1]])), matrix(NA, reps, ncol(data[[1]])))\n   \n   for(i in 1:reps){\n     if(null_hyp){\n       # Sample two sets of num_docs from the SAME set of documents     \n       row_ids <- 1:nrow(data[[2]])\n       group_1 <- sample(row_ids, num_docs[1])\n       group_2 <- sample(row_ids[-group_1], num_docs[2])\n       vecs2Test[[1]][i, ] <- data[[2]][group_1, ] %>% colSums()\n       vecs2Test[[2]][i, ] <- data[[2]][group_2, ] %>% colSums()\n       \n     }else{\n       # Sample num_docs from each of the two DIFFERENT sets of documents\n       vecs2Test[[1]][i, ] <- data[[1]][sample(1:nrow(data[[1]]), num_docs[1]), ] %>%\n                                      colSums()\n       vecs2Test[[2]][i,] <- data[[2]][sample(1:nrow(data[[2]]), num_docs[2]), ] %>%\n                                      colSums()\n     }\n   }\n   \n   #Perform the test:\n   result <- vecs2Test %>% multinom.neighborhood.test(delta = delta)\n   \n} #end simulation function\n```\n:::\n\n\nNow run the simulation for varying values of `delta` (in the range 1 to 160) testing both the null and alternative hypotheses for 30 replications each. For the null hypothesis simulation, we sample documents from the same newsgroup. For the simulation of the alternative hypotheis, we sample documents from the two different newsgroups. The resulting plot shows one curve for each the 60 simulations (which compute the p-value at each value of `delta`.)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndelta <- 1:160\np.delta.null <- simulation(data = twoNewsGroups, null_hyp = TRUE, delta = delta)$pvalue_delta\np.delta.alt  <- simulation(data = twoNewsGroups, null_hyp = FALSE, delta = delta)$pvalue_delta\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=768}\n:::\n:::\n\n\nNotice in the plot above that for `delta` in the range of about 40 to 100, the p-value is large when the the two sets of documents come from the same newsgroup (shown in blue) and small when the two sets of documents come from different newsgroups (shown in red). So, our previous choice of `delta`=60 seems reasonable for making the correct conclusion.\n\nThe methods for this package were developed in collaboration with my UMBC PhD thesis advisor, [Dr Junyong Park](http://www.math.umbc.edu/~junpark/), and published in [1](https://link.springer.com/article/10.1007%2Fs11749-018-0600-8) and [2](https://www.tandfonline.com/doi/abs/10.1080/03610926.2016.1260743). Full details about the statistics used and their distributions are documented in these papers. To see the full list of functions available in `hddtest`, see the [GitHub README](https://github.com/AmandaRP/hddtest). Thanks for reading!\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}